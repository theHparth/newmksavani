{"version":3,"sources":["app/views/adminUserCreatedby/HospitalSellingHandle/AddStockCard.js","app/views/adminUserCreatedby/HospitalSellingHandle/TodaySellingAddForm.js","../node_modules/@mui/material/MenuItem/menuItemClasses.js","../node_modules/@mui/material/ListItemText/listItemTextClasses.js","../node_modules/@mui/material/ListItemIcon/listItemIconClasses.js","../node_modules/@mui/material/MenuItem/MenuItem.js"],"names":["AddStockCard","stockOut","stockOutData","setStockOutData","index","stockData","handleChange","updateStockInDetail","e","target","name","value","slice","length","console","log","useEffect","onError","onSubmit","Card","sx","minWidth","display","flexDirection","padding","style","FormControl","variant","m","width","InputLabel","id","Select","labelId","onChange","label","stock_name","MenuItem","map","stockObj","type","totalBox","validators","errormessages","TextField","totalQtyInOneBox","Button","height","margin","onClick","Icon","color","marginLeft","AddStockOutForm","dispatch","useDispatch","useSelector","x","stockInUserList","presentStockUserData","todaySellingUserList","isLoading","showAlert","clearValues","alertType","alertText","isEditing","_id","todaySellingDataArr","stockInDetail","inStockUser","React","useState","emptyField","clearValuesTodaySelling","routeSegments","path","data","todaySellingData","edit","add","handleSubmit","isOpen","typeSeverity","alrtTextToShow","getMenuItemUtilityClass","slot","generateUtilityClass","menuItemClasses","generateUtilityClasses","getListItemTextUtilityClass","listItemTextClasses","listItemIconClasses","_excluded","MenuItemRoot","styled","ButtonBase","shouldForwardProp","prop","rootShouldForwardProp","overridesResolver","props","styles","ownerState","root","dense","divider","disableGutters","gutters","theme","_extends","typography","body1","justifyContent","alignItems","position","textDecoration","minHeight","paddingTop","paddingBottom","boxSizing","whiteSpace","paddingLeft","paddingRight","borderBottom","palette","backgroundClip","backgroundColor","action","hover","selected","alpha","primary","main","selectedOpacity","focusVisible","focusOpacity","hoverOpacity","focus","disabled","opacity","disabledOpacity","dividerClasses","marginTop","spacing","marginBottom","inset","breakpoints","up","body2","fontSize","inProps","ref","useThemeProps","autoFocus","component","focusVisibleClassName","role","tabIndexProp","tabIndex","other","_objectWithoutPropertiesLoose","context","ListContext","childContext","menuItemRef","useEnhancedEffect","current","classes","slots","composedClasses","composeClasses","useUtilityClasses","handleRef","useForkRef","undefined","_jsx","Provider","children","clsx"],"mappings":"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","file":"static/js/12.efdaac0b.chunk.js","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { Icon } from '@mui/material'\r\nimport InputLabel from '@mui/material/InputLabel'\r\nimport MenuItem from '@mui/material/MenuItem'\r\nimport FormControl from '@mui/material/FormControl'\r\nimport Select from '@mui/material/Select'\r\nimport Card from '@mui/material/Card'\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator'\r\n\r\nimport { Button, TextField } from '@mui/material'\r\n\r\nconst AddStockCard = ({\r\n    stockOut,\r\n    stockOutData,\r\n    setStockOutData,\r\n    index,\r\n    stockData,\r\n    updateStockInDetail,\r\n}) => {\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target\r\n        setStockOutData([\r\n            ...stockOutData.slice(0, index),\r\n            {\r\n                ...stockOutData[index],\r\n                [name]: value,\r\n            },\r\n            ...stockOutData.slice(index + 1, stockOutData.length),\r\n        ])\r\n        console.log(stockOutData)\r\n    }\r\n\r\n    const clearForm = () => {\r\n        setStockOutData([\r\n            ...stockOutData.slice(0, index),\r\n            {\r\n                stock_name: '',\r\n                totalBox: '',\r\n                totalQtyInOneBox: '',\r\n            },\r\n            ...stockOutData.slice(index + 1, stockOutData.length),\r\n        ])\r\n    }\r\n\r\n    const removeField = () => {\r\n        setStockOutData([\r\n            ...stockOutData.slice(0, index),\r\n            ...stockOutData.slice(index + 1, stockOutData.length),\r\n        ])\r\n    }\r\n\r\n    useEffect(() => {}, [])\r\n    const aaa = () => {}\r\n    return (\r\n        <ValidatorForm onError={() => null} onSubmit={aaa}>\r\n            {/* {updateStockInDetail.length == 0 ? ( */}\r\n            <Card\r\n                sx={{\r\n                    minWidth: 275,\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    padding: '0px 30px 30px 30px',\r\n                }}\r\n            >\r\n                <div style={{ display: 'flex' }}>\r\n                    <FormControl\r\n                        variant=\"standard\"\r\n                        sx={{ m: 1, minWidth: 120, width: 200 }}\r\n                    >\r\n                        <InputLabel id=\"demo-simple-select-standard-label\">\r\n                            Stock Name\r\n                        </InputLabel>\r\n\r\n                        <Select\r\n                            labelId=\"demo-simple-select-standard-label\"\r\n                            id=\"demo-simple-select-standard\"\r\n                            onChange={(e) => {\r\n                                handleChange(e)\r\n                            }}\r\n                            label=\"Stock Name\"\r\n                            name=\"stock_name\"\r\n                            value={stockOut.stock_name}\r\n                        >\r\n                            <MenuItem value=\"\">\r\n                                <em>None</em>\r\n                            </MenuItem>\r\n                            {stockData.map((stockObj, index) => (\r\n                                <MenuItem\r\n                                    key={index}\r\n                                    value={stockObj.stock_name}\r\n                                >\r\n                                    {stockObj.stock_name}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n\r\n                    {/* </div>\r\n                    <div style={{ display: 'flex' }}> */}\r\n                    <TextValidator\r\n                        type=\"number\"\r\n                        id=\"standard-basic\"\r\n                        label=\"Box\"\r\n                        variant=\"standard\"\r\n                        sx={{ m: 1, minWidth: 120, width: 200 }}\r\n                        name=\"totalBox\"\r\n                        value={stockOut.totalBox}\r\n                        onChange={handleChange}\r\n                        validators={['required', 'minNumber:1']}\r\n                        errormessages={['this field is required']}\r\n                    />\r\n                    <TextField\r\n                        type=\"number\"\r\n                        id=\"standard-basic\"\r\n                        label=\"Quantity Per Box\"\r\n                        variant=\"standard\"\r\n                        sx={{ m: 1, minWidth: 120, width: 200 }}\r\n                        name=\"totalQtyInOneBox\"\r\n                        value={stockOut.totalQtyInOneBox}\r\n                        onChange={handleChange}\r\n                        validators={['required', 'minNumber:1']}\r\n                        errormessages={['this field is required']}\r\n                    />\r\n\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        sx={{\r\n                            width: '50px',\r\n                            height: '40px',\r\n                            margin: '1px 20px 0px 480px',\r\n                        }}\r\n                        onClick={clearForm}\r\n                    >\r\n                        <Icon>clear</Icon>\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        color=\"error\"\r\n                        sx={{\r\n                            width: '50px',\r\n                            height: '40px',\r\n                            marginLeft: 'auto',\r\n                        }}\r\n                        onClick={removeField}\r\n                    >\r\n                        <Icon>delete</Icon>\r\n                    </Button>\r\n                </div>\r\n            </Card>\r\n        </ValidatorForm>\r\n    )\r\n}\r\n\r\nexport default AddStockCard\r\n","import { Button, Card } from '@mui/material'\r\nimport { Breadcrumb, ContainerForm, MyAlert, LodingShow } from 'app/components'\r\nimport React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport AddStockCard from './AddStockCard'\r\n\r\nimport { inStockUser } from 'app/redux/actions/userCreatedByAdmin/StockInUserAction'\r\nimport {\r\n    add,\r\n    edit,\r\n    clearValuesTodaySelling,\r\n} from 'app/redux/actions/userCreatedByAdmin/TodaySellingUserAction'\r\n\r\nfunction AddStockOutForm() {\r\n    const dispatch = useDispatch()\r\n    let { presentStockUserData = [] } = useSelector((x) => x.stockInUserList)\r\n    let {\r\n        isLoading,\r\n        showAlert,\r\n        clearValues,\r\n        alertType,\r\n        alertText,\r\n        isEditing,\r\n        _id,\r\n        todaySellingDataArr,\r\n        stockInDetail,\r\n    } = useSelector((x) => x.todaySellingUserList)\r\n    // isLoading = false\r\n    useEffect(() => {\r\n        if (todaySellingDataArr && todaySellingDataArr.length) {\r\n            setStockOutData(todaySellingDataArr)\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        dispatch(inStockUser({}))\r\n    }, [dispatch])\r\n\r\n    var [stockOutData, setStockOutData] = React.useState([\r\n        {\r\n            stock_name: '',\r\n            totalQtyInOneBox: '',\r\n            totalBox: '',\r\n        },\r\n    ])\r\n\r\n    const emptyField = {\r\n        stock_name: '',\r\n        totalQtyInOneBox: '',\r\n        totalBox: '',\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (clearValues) {\r\n            dispatch(clearValuesTodaySelling())\r\n            setStockOutData([emptyField])\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [clearValues])\r\n\r\n    const handleSubmit = () => {\r\n        const data = {\r\n            id: _id,\r\n\r\n            todaySellingData: stockOutData,\r\n        }\r\n        console.log('stock out data', data)\r\n        if (!isEditing) {\r\n            dispatch(add(data))\r\n        } else {\r\n            dispatch(edit(data))\r\n        }\r\n    }\r\n\r\n    console.log('alertType alertText', alertType, alertText)\r\n    return (\r\n        <ContainerForm>\r\n            <div>\r\n                <Breadcrumb\r\n                    routeSegments={[\r\n                        {\r\n                            name: 'Werehouse Stock Details',\r\n                            path: '/wereHouseStock',\r\n                        },\r\n                        { name: 'Table' },\r\n                    ]}\r\n                />\r\n                {isLoading && <LodingShow />}\r\n            </div>\r\n            <Card\r\n                sx={{\r\n                    minWidth: 275,\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    padding: '30px',\r\n                }}\r\n            >\r\n                {/* {!stockInDetail\r\n                    ?  */}\r\n                {stockOutData.map((stockOut, index) => (\r\n                    <AddStockCard\r\n                        key={index}\r\n                        stockOut={stockOut}\r\n                        stockOutData={stockOutData}\r\n                        setStockOutData={setStockOutData}\r\n                        index={index}\r\n                        stockData={presentStockUserData}\r\n                        updateStockInDetail={stockInDetail}\r\n                    />\r\n                ))}\r\n\r\n                <div style={{ display: 'flex', marginLeft: 'auto' }}>\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        color=\"success\"\r\n                        sx={{\r\n                            m: 1,\r\n                            minWidth: 120,\r\n                            width: 120,\r\n                            marginLeft: 'auto',\r\n                        }}\r\n                        onClick={() =>\r\n                            setStockOutData([...stockOutData, emptyField])\r\n                        }\r\n                    >\r\n                        Add More\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"success\"\r\n                        sx={{\r\n                            m: 1,\r\n                            minWidth: 120,\r\n                            width: 120,\r\n                            marginLeft: 'auto',\r\n                        }}\r\n                        onClick={() => handleSubmit()}\r\n                    >\r\n                        Submit\r\n                    </Button>\r\n                </div>\r\n            </Card>\r\n            {showAlert ? (\r\n                <MyAlert\r\n                    isOpen={showAlert}\r\n                    typeSeverity={alertType}\r\n                    alrtTextToShow={alertText}\r\n                />\r\n            ) : null}\r\n        </ContainerForm>\r\n    )\r\n}\r\n\r\nexport default AddStockOutForm\r\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getMenuItemUtilityClass(slot) {\n  return generateUtilityClass('MuiMenuItem', slot);\n}\nconst menuItemClasses = generateUtilityClasses('MuiMenuItem', ['root', 'focusVisible', 'dense', 'disabled', 'divider', 'gutters', 'selected']);\nexport default menuItemClasses;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getListItemTextUtilityClass(slot) {\n  return generateUtilityClass('MuiListItemText', slot);\n}\nconst listItemTextClasses = generateUtilityClasses('MuiListItemText', ['root', 'multiline', 'dense', 'inset', 'primary', 'secondary']);\nexport default listItemTextClasses;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getListItemIconUtilityClass(slot) {\n  return generateUtilityClass('MuiListItemIcon', slot);\n}\nconst listItemIconClasses = generateUtilityClasses('MuiListItemIcon', ['root', 'alignItemsFlexStart']);\nexport default listItemIconClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"component\", \"dense\", \"divider\", \"disableGutters\", \"focusVisibleClassName\", \"role\", \"tabIndex\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport ListContext from '../List/ListContext';\nimport ButtonBase from '../ButtonBase';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\nimport useForkRef from '../utils/useForkRef';\nimport { dividerClasses } from '../Divider';\nimport { listItemIconClasses } from '../ListItemIcon';\nimport { listItemTextClasses } from '../ListItemText';\nimport menuItemClasses, { getMenuItemUtilityClass } from './menuItemClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, ownerState.dense && styles.dense, ownerState.divider && styles.divider, !ownerState.disableGutters && styles.gutters];\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    disabled,\n    dense,\n    divider,\n    disableGutters,\n    selected,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', dense && 'dense', disabled && 'disabled', !disableGutters && 'gutters', divider && 'divider', selected && 'selected']\n  };\n  const composedClasses = composeClasses(slots, getMenuItemUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst MenuItemRoot = styled(ButtonBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiMenuItem',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({}, theme.typography.body1, {\n  display: 'flex',\n  justifyContent: 'flex-start',\n  alignItems: 'center',\n  position: 'relative',\n  textDecoration: 'none',\n  minHeight: 48,\n  paddingTop: 6,\n  paddingBottom: 6,\n  boxSizing: 'border-box',\n  whiteSpace: 'nowrap'\n}, !ownerState.disableGutters && {\n  paddingLeft: 16,\n  paddingRight: 16\n}, ownerState.divider && {\n  borderBottom: `1px solid ${theme.palette.divider}`,\n  backgroundClip: 'padding-box'\n}, {\n  '&:hover': {\n    textDecoration: 'none',\n    backgroundColor: theme.palette.action.hover,\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  },\n  [`&.${menuItemClasses.selected}`]: {\n    backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n    [`&.${menuItemClasses.focusVisible}`]: {\n      backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n    }\n  },\n  [`&.${menuItemClasses.selected}:hover`]: {\n    backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n    }\n  },\n  [`&.${menuItemClasses.focusVisible}`]: {\n    backgroundColor: theme.palette.action.focus\n  },\n  [`&.${menuItemClasses.disabled}`]: {\n    opacity: theme.palette.action.disabledOpacity\n  },\n  [`& + .${dividerClasses.root}`]: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  [`& + .${dividerClasses.inset}`]: {\n    marginLeft: 52\n  },\n  [`& .${listItemTextClasses.root}`]: {\n    marginTop: 0,\n    marginBottom: 0\n  },\n  [`& .${listItemTextClasses.inset}`]: {\n    paddingLeft: 36\n  },\n  [`& .${listItemIconClasses.root}`]: {\n    minWidth: 36\n  }\n}, !ownerState.dense && {\n  [theme.breakpoints.up('sm')]: {\n    minHeight: 'auto'\n  }\n}, ownerState.dense && _extends({\n  minHeight: 32,\n  // https://material.io/components/menus#specs > Dense\n  paddingTop: 4,\n  paddingBottom: 4\n}, theme.typography.body2, {\n  [`& .${listItemIconClasses.root} svg`]: {\n    fontSize: '1.25rem'\n  }\n})));\nconst MenuItem = /*#__PURE__*/React.forwardRef(function MenuItem(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiMenuItem'\n  });\n\n  const {\n    autoFocus = false,\n    component = 'li',\n    dense = false,\n    divider = false,\n    disableGutters = false,\n    focusVisibleClassName,\n    role = 'menuitem',\n    tabIndex: tabIndexProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const context = React.useContext(ListContext);\n  const childContext = {\n    dense: dense || context.dense || false,\n    disableGutters\n  };\n  const menuItemRef = React.useRef(null);\n  useEnhancedEffect(() => {\n    if (autoFocus) {\n      if (menuItemRef.current) {\n        menuItemRef.current.focus();\n      } else if (process.env.NODE_ENV !== 'production') {\n        console.error('MUI: Unable to set focus to a MenuItem whose component has not been rendered.');\n      }\n    }\n  }, [autoFocus]);\n\n  const ownerState = _extends({}, props, {\n    dense: childContext.dense,\n    divider,\n    disableGutters\n  });\n\n  const classes = useUtilityClasses(props);\n  const handleRef = useForkRef(menuItemRef, ref);\n  let tabIndex;\n\n  if (!props.disabled) {\n    tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;\n  }\n\n  return /*#__PURE__*/_jsx(ListContext.Provider, {\n    value: childContext,\n    children: /*#__PURE__*/_jsx(MenuItemRoot, _extends({\n      ref: handleRef,\n      role: role,\n      tabIndex: tabIndex,\n      component: component,\n      focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName)\n    }, other, {\n      ownerState: ownerState,\n      classes: classes\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItem.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the list item is focused during the first mount.\n   * Focus will also be triggered if the value changes from false to true.\n   * @default false\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input is used.\n   * The prop defaults to the value inherited from the parent Menu component.\n   * @default false\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * If `true`, a 1px light border is added to the bottom of the menu item.\n   * @default false\n   */\n  divider: PropTypes.bool,\n\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  role: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .string,\n\n  /**\n   * @ignore\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * @default 0\n   */\n  tabIndex: PropTypes.number\n} : void 0;\nexport default MenuItem;"],"sourceRoot":""}