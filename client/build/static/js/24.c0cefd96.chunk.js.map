{"version":3,"sources":["app/views/admin/stockOut/AllStockOut.js"],"names":["AllStockOutTrueStatus","id","useState","hospitalDa","setHospitalDa","shouldOpenEditorDialog","setShouldOpenEditorDialog","shouldOpenConfirmationDialog","setShouldOpenConfirmationDialog","info","setInfo","handleDialogClose","React","searchText","setSearchText","searchDate","setSearchDate","rowsPerPage","setRowsPerPage","page","setPage","expanded","setExpanded","location","useLocation","privatrRoute","searchStatus","pathname","useSelector","state","stockOutList","allStockOutData","showAlert","alertType","alertText","isLoading","dispatch","useDispatch","useEffect","allStockOutDatas","className","routeSegments","name","path","onSearch","value","onSearchValueChange","dateProjection","onSearchDate","length","title","width","slice","map","subscriber","index","onChange","panel","event","isExpanded","expandIcon","invoiceNum","hospitalName","createdAt","substring","style","backgroundColor","align","variant","color","onClick","setEditData","to","hospitalId","_id","stockOutDetail","stock_name","totalBox","totalQtyInOneBox","priceForUser","messageForHospital","open","onConfirmDialogClose","onYesClick","deleteData","then","text","handleClose","invoiceInfo","sx","px","rowsPerPageOptions","component","count","backIconButtonProps","nextIconButtonProps","onPageChange","newPage","onRowsPerPageChange","target","isOpen","typeSeverity","alrtTextToShow"],"mappings":"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","file":"static/js/24.c0cefd96.chunk.js","sourcesContent":["import Accordion from '@mui/material/Accordion'\r\nimport AccordionDetails from '@mui/material/AccordionDetails'\r\nimport AccordionSummary from '@mui/material/AccordionSummary'\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\r\nimport { Box } from '@mui/system'\r\nimport { useLocation, Link } from 'react-router-dom' // my import\r\nimport {\r\n    SearchBox,\r\n    Breadcrumb,\r\n    SimpleCard,\r\n    ContainerTable,\r\n    StyledTable,\r\n    Heading,\r\n    SecondaryHeading,\r\n    ThirdHeading,\r\n    DateChoose,\r\n    InvoiceDetails,\r\n    MyAlert,\r\n    LodingShow,\r\n    H1Alert,\r\n} from 'app/components'\r\nimport {\r\n    TableHead,\r\n    TableBody,\r\n    TableRow,\r\n    TableCell,\r\n    Icon,\r\n    TablePagination,\r\n    Button,\r\n} from '@mui/material'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport React, { useEffect, useState } from 'react'\r\nimport ConfirmationDialog from 'app/components/ConfirmationDialog/ConfirmationDialog'\r\n\r\nimport {\r\n    allStockOutDatas,\r\n    setEditData,\r\n    deleteData,\r\n} from 'app/redux/actions/admin/StockOutAction'\r\n\r\nconst AllStockOutTrueStatus = ({ id }) => {\r\n    // for printing and deleting pperpose\r\n    const [hospitalDa, setHospitalDa] = useState(null)\r\n    const [shouldOpenEditorDialog, setShouldOpenEditorDialog] = useState(false)\r\n    const [shouldOpenConfirmationDialog, setShouldOpenConfirmationDialog] =\r\n        useState(false)\r\n    const [info, setInfo] = useState()\r\n    const handleDialogClose = () => {\r\n        setShouldOpenEditorDialog(false)\r\n        setShouldOpenConfirmationDialog(false)\r\n        // dispatch(getHospitalsData())\r\n    }\r\n    const handleDeleteUser = (hospitalId) => {\r\n        setHospitalDa(hospitalId)\r\n        setShouldOpenConfirmationDialog(true)\r\n    }\r\n\r\n    const handleConfirmationResponse = () => {\r\n        dispatch(deleteData(hospitalDa)).then(() => {\r\n            handleDialogClose()\r\n            setExpanded(false)\r\n        })\r\n        dispatch(allStockOutDatas({ searchStatus: false }))\r\n    }\r\n    // search for all\r\n    let [searchText, setSearchText] = React.useState('')\r\n\r\n    const handleChangeSearch = (value) => {\r\n        setSearchText(value)\r\n    }\r\n\r\n    // for date search\r\n    let [searchDate, setSearchDate] = React.useState({})\r\n\r\n    // for pagination purposes\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(25)\r\n    const [page, setPage] = React.useState(0)\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage)\r\n    }\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value)\r\n        setPage(0)\r\n    }\r\n    // for panel setup\r\n    const [expanded, setExpanded] = React.useState(false)\r\n    const handleChange = (panel) => (event, isExpanded) => {\r\n        setExpanded(isExpanded ? panel : false)\r\n    }\r\n\r\n    const location = useLocation()\r\n\r\n    var privatrRoute = false\r\n    var searchStatus = true\r\n    if (location.pathname === '/pendingStockOut') {\r\n        searchStatus = false\r\n        privatrRoute = true\r\n    }\r\n\r\n    let {\r\n        allStockOutData = [],\r\n        showAlert,\r\n        alertType,\r\n        alertText,\r\n        isLoading,\r\n    } = useSelector((state) => state.stockOutList)\r\n    // isLoading = true\r\n    const dispatch = useDispatch()\r\n\r\n    // useEffect(() => {\r\n    //     setSearchDate({})\r\n    // }, [privatrRoute])\r\n\r\n    useEffect(() => {\r\n        var state = { searchText, searchDate, id, searchStatus }\r\n        dispatch(allStockOutDatas(state))\r\n        setExpanded(false)\r\n        // eslint-disable-next-line\r\n    }, [dispatch, searchText, searchDate, searchStatus])\r\n\r\n    // useEffect(() => {\r\n    //     console.log(\r\n    //         shouldOpenConfirmationDialog,\r\n    //         'shouldOpenConfirmationDialog'\r\n    //     )\r\n    //     if (shouldOpenConfirmationDialog) {\r\n    //         isLoading = false\r\n    //     }\r\n    // }, [shouldOpenConfirmationDialog])\r\n    return (\r\n        <ContainerTable>\r\n            <div className=\"breadcrumb\">\r\n                <Breadcrumb\r\n                    routeSegments={[\r\n                        { name: 'Stock out form', path: '/stockOutForm' },\r\n                        { name: 'Form' },\r\n                    ]}\r\n                />\r\n                {/* date chooser from--------FROM---------- */}\r\n                <SearchBox\r\n                    onSearch={handleChangeSearch}\r\n                    onSearchValueChange={searchText}\r\n                />\r\n                <DateChoose\r\n                    dateProjection={(state) => setSearchDate(state)}\r\n                    onSearchDate={searchDate}\r\n                />\r\n            </div>\r\n            {isLoading && <LodingShow />}\r\n\r\n            {allStockOutData.length === 0 ? (\r\n                <H1Alert />\r\n            ) : (\r\n                <SimpleCard title=\"Stock out data\">\r\n                    <Box width=\"100%\">\r\n                        <AccordionSummary\r\n                            aria-controls=\"panel1bh-content\"\r\n                            id=\"panel1bh-header\"\r\n                        >\r\n                            <Heading>Invoice No</Heading>\r\n                            <SecondaryHeading>Hospital Name</SecondaryHeading>\r\n                            <ThirdHeading>Date</ThirdHeading>\r\n                        </AccordionSummary>\r\n                        {/* data print start from here*/}\r\n                        {allStockOutData\r\n                            .slice(\r\n                                page * rowsPerPage,\r\n                                page * rowsPerPage + rowsPerPage\r\n                            )\r\n                            .map((subscriber, index) => (\r\n                                <Accordion\r\n                                    expanded={expanded === `panel${index}`}\r\n                                    onChange={handleChange(`panel${index}`)}\r\n                                    key={index}\r\n                                >\r\n                                    <AccordionSummary\r\n                                        expandIcon={<ExpandMoreIcon />}\r\n                                        aria-controls=\"panel2bh-content\"\r\n                                        id=\"panel2bh-header\"\r\n                                    >\r\n                                        <Heading>\r\n                                            {subscriber.invoiceNum}\r\n                                        </Heading>\r\n                                        <SecondaryHeading>\r\n                                            {subscriber.hospitalName}\r\n                                        </SecondaryHeading>\r\n                                        <ThirdHeading>\r\n                                            {/* {moment(subscriber.createdAt).format(\r\n                                            'MM-DD-YYYY'\r\n                                        )} */}\r\n                                            {subscriber.createdAt &&\r\n                                                subscriber.createdAt.substring(\r\n                                                    0,\r\n                                                    10\r\n                                                )}\r\n                                        </ThirdHeading>\r\n                                    </AccordionSummary>\r\n                                    <AccordionDetails\r\n                                        style={{ backgroundColor: '#F5F5F5' }}\r\n                                    >\r\n                                        <StyledTable>\r\n                                            <TableHead\r\n                                                style={{\r\n                                                    backgroundColor: '#EBF5FB',\r\n                                                }}\r\n                                            >\r\n                                                <TableRow>\r\n                                                    <TableCell>\r\n                                                        Stock Name\r\n                                                    </TableCell>\r\n                                                    <TableCell>\r\n                                                        Total Qty\r\n                                                    </TableCell>\r\n                                                    <TableCell>\r\n                                                        Price to show\r\n                                                    </TableCell>\r\n\r\n                                                    <TableCell align=\"right\">\r\n                                                        {privatrRoute && (\r\n                                                            <>\r\n                                                                <Button\r\n                                                                    variant=\"outlined\"\r\n                                                                    color=\"success\"\r\n                                                                    onClick={() =>\r\n                                                                        dispatch(\r\n                                                                            setEditData(\r\n                                                                                subscriber\r\n                                                                            )\r\n                                                                        )\r\n                                                                    }\r\n                                                                >\r\n                                                                    <Link\r\n                                                                        to={`/stockOutForm`}\r\n                                                                    >\r\n                                                                        Edit\r\n                                                                    </Link>\r\n                                                                </Button>\r\n                                                                {/* <TableCell></TableCell> */}\r\n                                                                <Button\r\n                                                                    variant=\"contained\"\r\n                                                                    color=\"error\"\r\n                                                                    onClick={() =>\r\n                                                                        handleDeleteUser(\r\n                                                                            subscriber._id\r\n                                                                        )\r\n                                                                    }\r\n                                                                >\r\n                                                                    Delete\r\n                                                                </Button>\r\n                                                            </>\r\n                                                        )}\r\n                                                    </TableCell>\r\n                                                    {/* TO PRINT */}\r\n                                                    <TableCell align=\"center\">\r\n                                                        <Button\r\n                                                            variant=\"outlined\"\r\n                                                            color=\"primary\"\r\n                                                            onClick={() => {\r\n                                                                setShouldOpenEditorDialog(\r\n                                                                    true\r\n                                                                )\r\n                                                                setInfo(\r\n                                                                    subscriber\r\n                                                                )\r\n                                                            }}\r\n                                                        >\r\n                                                            <Icon color=\"primary\">\r\n                                                                print\r\n                                                            </Icon>\r\n                                                        </Button>\r\n                                                    </TableCell>\r\n                                                    {/* PRINT COMPLETE */}\r\n                                                </TableRow>\r\n                                            </TableHead>\r\n                                            <TableBody>\r\n                                                {subscriber.stockOutDetail.map(\r\n                                                    (subscriber, index) => (\r\n                                                        <TableRow key={index}>\r\n                                                            <TableCell>\r\n                                                                {\r\n                                                                    subscriber.stock_name\r\n                                                                }\r\n                                                            </TableCell>\r\n                                                            <TableCell>\r\n                                                                {subscriber.totalBox *\r\n                                                                    subscriber.totalQtyInOneBox}\r\n                                                            </TableCell>\r\n                                                            <TableCell>\r\n                                                                ${' '}\r\n                                                                {subscriber.priceForUser\r\n                                                                    ? subscriber.priceForUser\r\n                                                                    : 0}\r\n                                                            </TableCell>\r\n                                                        </TableRow>\r\n                                                    )\r\n                                                )}\r\n                                                {subscriber.messageForHospital && (\r\n                                                    <TableCell>\r\n                                                        Note :{' '}\r\n                                                        {\r\n                                                            subscriber.messageForHospital\r\n                                                        }\r\n                                                    </TableCell>\r\n                                                )}\r\n                                            </TableBody>\r\n                                        </StyledTable>\r\n                                    </AccordionDetails>\r\n                                </Accordion>\r\n                            ))}\r\n                        {shouldOpenConfirmationDialog && (\r\n                            <ConfirmationDialog\r\n                                open={shouldOpenConfirmationDialog}\r\n                                onConfirmDialogClose={handleDialogClose}\r\n                                onYesClick={handleConfirmationResponse}\r\n                                text=\"Are you sure to delete?\"\r\n                            />\r\n                        )}\r\n                        {shouldOpenEditorDialog && (\r\n                            <InvoiceDetails\r\n                                handleClose={handleDialogClose}\r\n                                open={shouldOpenEditorDialog}\r\n                                invoiceInfo={info}\r\n                            />\r\n                        )}\r\n                        <TablePagination\r\n                            sx={{ px: 2 }}\r\n                            rowsPerPageOptions={[5, 10, 25]}\r\n                            component=\"div\"\r\n                            count={allStockOutData.length}\r\n                            rowsPerPage={rowsPerPage}\r\n                            page={page}\r\n                            backIconButtonProps={{\r\n                                'aria-label': 'Previous Page',\r\n                            }}\r\n                            nextIconButtonProps={{\r\n                                'aria-label': 'Next Page',\r\n                            }}\r\n                            onPageChange={handleChangePage}\r\n                            onRowsPerPageChange={handleChangeRowsPerPage}\r\n                        />\r\n                        {showAlert ? (\r\n                            <MyAlert\r\n                                isOpen={showAlert}\r\n                                typeSeverity={alertType}\r\n                                alrtTextToShow={\r\n                                    privatrRoute\r\n                                        ? 'Stock activated successfully'\r\n                                        : alertText\r\n                                }\r\n                            />\r\n                        ) : null}\r\n                    </Box>\r\n                </SimpleCard>\r\n            )}\r\n        </ContainerTable>\r\n    )\r\n}\r\n\r\nexport default AllStockOutTrueStatus\r\n"],"sourceRoot":""}