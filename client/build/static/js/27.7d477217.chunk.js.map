{"version":3,"sources":["app/views/admin/vendor/AddVendor.js"],"names":["AddVendor","useSelector","x","vendorList","clearValues","isLoading","isEditing","showAlert","alertText","address","contect","email","pincode","vendor_name","_id","useState","id","state","setState","clear","dispatch","useDispatch","handleInput","e","name","target","value","className","routeSegments","path","onSubmit","preventDefault","edit","clearValue","add","onError","container","spacing","item","lg","md","sm","xs","sx","mt","type","onChange","validators","label","errorMessages","color","variant","style","margin","disabled","pl","textTransform","onClick","py","open","autoHideDuration","severity","width"],"mappings":"oPAyMeA,UA9LG,WACd,MAaIC,aAAY,SAACC,GAAD,OAAOA,EAAEC,cAZrBC,EADJ,EACIA,YACAC,EAFJ,EAEIA,UACAC,EAHJ,EAGIA,UACAC,EAJJ,EAIIA,UAEAC,EANJ,EAMIA,UACAC,EAPJ,EAOIA,QACAC,EARJ,EAQIA,QACAC,EATJ,EASIA,MACAC,EAVJ,EAUIA,QACAC,EAXJ,EAWIA,YACAC,EAZJ,EAYIA,IAGJ,EAA0BC,mBAAS,CAC/BC,GAAIF,EAEJJ,QAASA,EACTE,QAASA,EACTH,QAASA,EACTI,YAAaA,EACbF,MAAOA,IAPX,mBAAOM,EAAP,KAAcC,EAAd,KASMC,EAAQ,WACVD,EAAS,CACLL,YAAa,GACbH,QAAS,GACTE,QAAS,GACTH,QAAS,GACTE,MAAO,GACPK,GAAI,MAGNI,EAAWC,cA0BXC,EAAc,SAACC,GACjB,IAAMC,EAAOD,EAAEE,OAAOD,KAChBE,EAAQH,EAAEE,OAAOC,MAEvBR,EAAS,2BACFD,GADC,kBAEHO,EAAOE,MAGhB,OACI,eAAC,IAAD,WACI,qBAAKC,UAAU,aAAf,SACI,cAAC,IAAD,CACIC,cAAe,CACX,CAAEJ,KAAM,aAAcK,KAAM,cAC5B,CAAEL,KAAM,cAIpB,cAAC,IAAD,UACI,eAAC,gBAAD,CAAeM,SA5CN,SAACP,GAClBA,EAAEQ,iBAEEzB,GACAc,EAASY,YAAKf,IACTb,IACDgB,EAASa,eACTd,OAQJC,EAASc,YAAIjB,IACRb,IACDgB,EAASa,eACTd,OA0BuCgB,QAAS,kBAAM,MAAtD,UACI,cAAC,IAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,SACI,eAAC,IAAD,CAAMC,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAAIC,GAAI,CAAEC,GAAI,GAAnD,UACI,6BAAK9B,EAAM,cAAgB,eAE3B,cAAC,IAAD,CACI+B,KAAK,OACLrB,KAAK,cACLR,GAAG,iBACH8B,SAAUxB,EACVI,MAAOT,EAAMJ,YACbkC,WAAY,CAAC,YACbC,MAAM,cACNC,cAAe,CAAC,4BAEpB,cAAC,IAAD,CACIJ,KAAK,OACLrB,KAAK,UACLR,GAAG,iBACH8B,SAAUxB,EACVI,MAAOT,EAAMR,QACbsC,WAAY,CAAC,YACbC,MAAM,UACNC,cAAe,CAAC,4BAEpB,cAAC,IAAD,CACIJ,KAAK,OACLrB,KAAK,UACLR,GAAG,iBACH8B,SAAUxB,EACVI,MAAOT,EAAML,QACbmC,WAAY,CAAC,YACbC,MAAM,UACNC,cAAe,CAAC,4BAGpB,cAAC,IAAD,CACID,MAAM,QACNF,SAAUxB,EACVuB,KAAK,QACLrB,KAAK,QACLE,MAAOT,EAAMN,MACboC,WAAY,CAAC,WAAY,WACzBE,cAAe,CACX,yBACA,wBAIR,cAAC,IAAD,CACID,MAAM,gBACNF,SAAUxB,EACVuB,KAAK,OACLrB,KAAK,UACLE,MAAOT,EAAMP,QACbqC,WAAY,CAAC,YACbE,cAAe,CAAC,iCAI5B,eAAC,IAAD,CACIC,MAAM,UACNC,QAAQ,YACRN,KAAK,SACLO,MAAO,CAAEC,OAAQ,OACjBC,SAAUjD,EALd,UAOI,cAAC,IAAD,mBACA,cAAC,IAAD,CAAMsC,GAAI,CAAEY,GAAI,EAAGC,cAAe,cAAlC,uBAIJ,eAAC,IAAD,CACIN,MAAM,UACNC,QAAQ,YACRN,KAAK,SACLO,MAAO,CAAEC,OAAQ,OACjBI,QAAS,SAAClC,GACNA,EAAEQ,iBACFZ,KAPR,UAUI,cAAC,IAAD,oBACA,cAAC,IAAD,CAAMwB,GAAI,CAAEY,GAAI,EAAGC,cAAe,cAAlC,iCAMZ,cAAC,IAAD,CAAKE,GAAG,SACPnD,EACG,cAAC,IAAD,CAAUoD,KAAMpD,EAAWqD,iBAAkB,KAA7C,SACI,cAAC,IAAD,CACIC,SACkB,yBAAdrD,GACc,2BAAdA,EACM,UACA,QAEVmC,GAAI,CAAEmB,MAAO,QAPjB,SASKtD,MAGT","file":"static/js/27.7d477217.chunk.js","sourcesContent":["import { Breadcrumb, SimpleCard } from 'app/components'\r\nimport { Box } from '@mui/system'\r\nimport { Span } from 'app/components/Typography'\r\nimport React, { useState } from 'react'\r\nimport { ValidatorForm } from 'react-material-ui-form-validator'\r\nimport { Button, Icon, Grid, Snackbar, Alert } from '@mui/material'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { edit, add, clearValue } from 'app/redux/actions/admin/VendorActions'\r\n\r\nimport { ContainerForm, TextField } from 'app/components'\r\n\r\nconst AddVendor = () => {\r\n    const {\r\n        clearValues,\r\n        isLoading,\r\n        isEditing,\r\n        showAlert,\r\n\r\n        alertText,\r\n        address,\r\n        contect,\r\n        email,\r\n        pincode,\r\n        vendor_name,\r\n        _id,\r\n    } = useSelector((x) => x.vendorList)\r\n\r\n    const [state, setState] = useState({\r\n        id: _id,\r\n\r\n        contect: contect,\r\n        pincode: pincode,\r\n        address: address,\r\n        vendor_name: vendor_name,\r\n        email: email,\r\n    })\r\n    const clear = () => {\r\n        setState({\r\n            vendor_name: '',\r\n            contect: '',\r\n            pincode: '',\r\n            address: '',\r\n            email: '',\r\n            id: '',\r\n        })\r\n    }\r\n    const dispatch = useDispatch()\r\n    // console.log(isEditing)\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (isEditing) {\r\n            dispatch(edit(state))\r\n            if (!clearValues) {\r\n                dispatch(clearValue())\r\n                clear()\r\n                // handleClose()\r\n            }\r\n\r\n            // if (alertText == 'Vendor data Updated!') {\r\n            //     clear()\r\n            // }\r\n        } else {\r\n            dispatch(add(state))\r\n            if (!clearValues) {\r\n                dispatch(clearValue())\r\n                clear()\r\n                // handleClose()\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleInput = (e) => {\r\n        const name = e.target.name\r\n        const value = e.target.value\r\n\r\n        setState({\r\n            ...state,\r\n            [name]: value,\r\n        })\r\n    }\r\n    return (\r\n        <ContainerForm>\r\n            <div className=\"breadcrumb\">\r\n                <Breadcrumb\r\n                    routeSegments={[\r\n                        { name: 'All Vendor', path: '/allVendor' },\r\n                        { name: 'Table' },\r\n                    ]}\r\n                />\r\n            </div>\r\n            <SimpleCard>\r\n                <ValidatorForm onSubmit={handleSubmit} onError={() => null}>\r\n                    <Grid container spacing={6}>\r\n                        <Grid item lg={6} md={6} sm={12} xs={12} sx={{ mt: 2 }}>\r\n                            <h3>{_id ? 'Edit Vendor' : 'Add Vendor'}</h3>\r\n\r\n                            <TextField\r\n                                type=\"text\"\r\n                                name=\"vendor_name\"\r\n                                id=\"standard-basic\"\r\n                                onChange={handleInput}\r\n                                value={state.vendor_name}\r\n                                validators={['required']}\r\n                                label=\"Vendor Name\"\r\n                                errorMessages={['this field is required']}\r\n                            />\r\n                            <TextField\r\n                                type=\"text\"\r\n                                name=\"address\"\r\n                                id=\"standard-basic\"\r\n                                onChange={handleInput}\r\n                                value={state.address}\r\n                                validators={['required']}\r\n                                label=\"Address\"\r\n                                errorMessages={['this field is required']}\r\n                            />\r\n                            <TextField\r\n                                type=\"text\"\r\n                                name=\"pincode\"\r\n                                id=\"standard-basic\"\r\n                                onChange={handleInput}\r\n                                value={state.pincode}\r\n                                validators={['required']}\r\n                                label=\"Pincode\"\r\n                                errorMessages={['this field is required']}\r\n                            />\r\n\r\n                            <TextField\r\n                                label=\"Email\"\r\n                                onChange={handleInput}\r\n                                type=\"email\"\r\n                                name=\"email\"\r\n                                value={state.email}\r\n                                validators={['required', 'isEmail']}\r\n                                errorMessages={[\r\n                                    'this field is required',\r\n                                    'email is not valid',\r\n                                ]}\r\n                            />\r\n\r\n                            <TextField\r\n                                label=\"Mobile Nubmer\"\r\n                                onChange={handleInput}\r\n                                type=\"text\"\r\n                                name=\"contect\"\r\n                                value={state.contect}\r\n                                validators={['required']}\r\n                                errorMessages={['this field is required']}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Button\r\n                        color=\"primary\"\r\n                        variant=\"contained\"\r\n                        type=\"submit\"\r\n                        style={{ margin: '5px' }}\r\n                        disabled={isLoading}\r\n                    >\r\n                        <Icon>send</Icon>\r\n                        <Span sx={{ pl: 1, textTransform: 'capitalize' }}>\r\n                            Submit\r\n                        </Span>\r\n                    </Button>\r\n                    <Button\r\n                        color=\"primary\"\r\n                        variant=\"contained\"\r\n                        type=\"submit\"\r\n                        style={{ margin: '5px' }}\r\n                        onClick={(e) => {\r\n                            e.preventDefault()\r\n                            clear()\r\n                        }}\r\n                    >\r\n                        <Icon>clear</Icon>\r\n                        <Span sx={{ pl: 1, textTransform: 'capitalize' }}>\r\n                            Clear Value\r\n                        </Span>\r\n                    </Button>\r\n                </ValidatorForm>\r\n            </SimpleCard>\r\n            <Box py=\"12px\" />\r\n            {showAlert ? (\r\n                <Snackbar open={showAlert} autoHideDuration={19000}>\r\n                    <Alert\r\n                        severity={\r\n                            alertText === 'Vendor data Updated!' ||\r\n                            alertText === 'New Vendor data Added!'\r\n                                ? 'success'\r\n                                : 'error'\r\n                        }\r\n                        sx={{ width: '100%' }}\r\n                    >\r\n                        {alertText}\r\n                    </Alert>\r\n                </Snackbar>\r\n            ) : null}\r\n        </ContainerForm>\r\n    )\r\n}\r\n\r\nexport default AddVendor\r\n"],"sourceRoot":""}