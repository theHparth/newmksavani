{"version":3,"sources":["app/views/admin/profile/AdminProfile.js"],"names":["AdminProfile","updateAdmin","useAuth","user","localStorage","getItem","adminInfo","JSON","parse","useState","_id","name","lastName","address","pincode","contect","email","password","state","setState","handleSubmit","e","a","handleInput","target","value","className","routeSegments","path","onSubmit","onError","container","spacing","item","lg","md","sm","xs","sx","mt","type","id","onChange","validators","label","errorMessages","color","variant","style","margin","pl","textTransform"],"mappings":"0OAiKeA,UAlJM,WACjB,IAAQC,EAAgBC,cAAhBD,YAEFE,EAAOC,aAAaC,QAAQ,QAC9BC,EAAYC,KAAKC,MAAML,GAE3B,EAA0BM,mBAAS,CAC/BC,IAAKJ,EAAS,IACdK,KAAML,EAAS,KACfM,SAAUN,EAAS,SACnBO,QAASP,EAAS,QAClBQ,QAASR,EAAS,QAClBS,QAAST,EAAS,QAClBU,MAAOV,EAAS,MAChBW,SAAU,KARd,mBAAOC,EAAP,KAAcC,EAAd,KAWMC,EAAY,uCAAG,WAAOC,GAAP,SAAAC,EAAA,sEAKXrB,EAAYiB,GALD,2CAAH,sDAQZK,EAAc,SAACF,GACjB,IAAMV,EAAOU,EAAEG,OAAOb,KAChBc,EAAQJ,EAAEG,OAAOC,MAEvBN,EAAS,2BACFD,GADC,kBAEHP,EAAOc,MAIhB,OACI,eAAC,IAAD,WACI,qBAAKC,UAAU,aAAf,SACI,cAAC,IAAD,CACIC,cAAe,CACX,CAAEhB,KAAM,YAAaiB,KAAM,sBAC3B,CAAEjB,KAAM,kBAIpB,cAAC,IAAD,UACI,eAAC,gBAAD,CAAekB,SAAUT,EAAcU,QAAS,kBAAM,MAAtD,UACI,cAAC,IAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,SACI,eAAC,IAAD,CAAMC,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAAIC,GAAI,CAAEC,GAAI,GAAnD,UACI,yCAEA,cAAC,IAAD,CACIC,KAAK,OACL7B,KAAK,OACL8B,GAAG,iBACHC,SAAUnB,EACVE,MAAOP,EAAMP,KACbgC,WAAY,CAAC,YACbC,MAAM,aACNC,cAAe,CAAC,4BAEpB,cAAC,IAAD,CACIL,KAAK,OACL7B,KAAK,WACL8B,GAAG,iBACHC,SAAUnB,EACVE,MAAOP,EAAMN,SACb+B,WAAY,CAAC,YACbC,MAAM,YACNC,cAAe,CAAC,4BAEpB,cAAC,IAAD,CACIL,KAAK,OACL7B,KAAK,UACL8B,GAAG,iBACHC,SAAUnB,EACVE,MAAOP,EAAML,QACb8B,WAAY,CAAC,YACbC,MAAM,UACNC,cAAe,CAAC,4BAEpB,cAAC,IAAD,CACIL,KAAK,OACL7B,KAAK,UACL8B,GAAG,iBACHC,SAAUnB,EACVE,MAAOP,EAAMJ,QACb6B,WAAY,CAAC,YACbC,MAAM,UACNC,cAAe,CAAC,4BAEpB,cAAC,IAAD,CACIL,KAAK,OACL7B,KAAK,UACL8B,GAAG,iBACHC,SAAUnB,EACVE,MAAOP,EAAMH,QACb4B,WAAY,CAAC,YACbC,MAAM,UACNC,cAAe,CAAC,4BAEpB,cAAC,IAAD,CACIL,KAAK,OACL7B,KAAK,QACL8B,GAAG,iBACHC,SAAUnB,EACVE,MAAOP,EAAMF,MACb2B,WAAY,CAAC,YACbC,MAAM,QACNC,cAAe,CAAC,4BAEpB,cAAC,IAAD,CACIL,KAAK,OACL7B,KAAK,WACL8B,GAAG,iBACHC,SAAUnB,EACVE,MAAOP,EAAMD,SACb2B,MAAM,sBAIlB,eAAC,IAAD,CACIE,MAAM,UACNC,QAAQ,YACRP,KAAK,SACLQ,MAAO,CAAEC,OAAQ,OAJrB,UAOI,cAAC,IAAD,mBACA,cAAC,IAAD,CAAMX,GAAI,CAAEY,GAAI,EAAGC,cAAe,cAAlC","file":"static/js/23.cb38adfd.chunk.js","sourcesContent":["import {\r\n    Breadcrumb,\r\n    SimpleCard,\r\n    ContainerForm,\r\n    TextField,\r\n} from 'app/components'\r\nimport { ValidatorForm } from 'react-material-ui-form-validator'\r\n// import { getAllVendor } from 'app/redux/actions/VendorActions'\r\n\r\nimport { Button, Icon, Grid } from '@mui/material'\r\nimport { Span } from 'app/components/Typography'\r\nimport React, { useState } from 'react'\r\n\r\nimport useAuth from 'app/hooks/useAuth'\r\n\r\nconst AdminProfile = () => {\r\n    const { updateAdmin } = useAuth()\r\n\r\n    const user = localStorage.getItem('user')\r\n    var adminInfo = JSON.parse(user)\r\n\r\n    const [state, setState] = useState({\r\n        _id: adminInfo['_id'],\r\n        name: adminInfo['name'],\r\n        lastName: adminInfo['lastName'],\r\n        address: adminInfo['address'],\r\n        pincode: adminInfo['pincode'],\r\n        contect: adminInfo['contect'],\r\n        email: adminInfo['email'],\r\n        password: '',\r\n    })\r\n\r\n    const handleSubmit = async (e) => {\r\n        // e.preventDefault()\r\n\r\n        // dispatch(updateProfile(state))\r\n\r\n        await updateAdmin(state)\r\n    }\r\n\r\n    const handleInput = (e) => {\r\n        const name = e.target.name\r\n        const value = e.target.value\r\n\r\n        setState({\r\n            ...state,\r\n            [name]: value,\r\n        })\r\n    }\r\n\r\n    return (\r\n        <ContainerForm>\r\n            <div className=\"breadcrumb\">\r\n                <Breadcrumb\r\n                    routeSegments={[\r\n                        { name: 'Home page', path: '/dashboard/default' },\r\n                        { name: 'Dashboard' },\r\n                    ]}\r\n                />\r\n            </div>\r\n            <SimpleCard>\r\n                <ValidatorForm onSubmit={handleSubmit} onError={() => null}>\r\n                    <Grid container spacing={6}>\r\n                        <Grid item lg={6} md={6} sm={12} xs={12} sx={{ mt: 2 }}>\r\n                            <h3>Profile</h3>\r\n\r\n                            <TextField\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                id=\"standard-basic\"\r\n                                onChange={handleInput}\r\n                                value={state.name}\r\n                                validators={['required']}\r\n                                label=\"First Name\"\r\n                                errorMessages={['this field is required']}\r\n                            />\r\n                            <TextField\r\n                                type=\"text\"\r\n                                name=\"lastName\"\r\n                                id=\"standard-basic\"\r\n                                onChange={handleInput}\r\n                                value={state.lastName}\r\n                                validators={['required']}\r\n                                label=\"Last name\"\r\n                                errorMessages={['this field is required']}\r\n                            />\r\n                            <TextField\r\n                                type=\"text\"\r\n                                name=\"address\"\r\n                                id=\"standard-basic\"\r\n                                onChange={handleInput}\r\n                                value={state.address}\r\n                                validators={['required']}\r\n                                label=\"Address\"\r\n                                errorMessages={['this field is required']}\r\n                            />\r\n                            <TextField\r\n                                type=\"text\"\r\n                                name=\"pincode\"\r\n                                id=\"standard-basic\"\r\n                                onChange={handleInput}\r\n                                value={state.pincode}\r\n                                validators={['required']}\r\n                                label=\"Pincode\"\r\n                                errorMessages={['this field is required']}\r\n                            />\r\n                            <TextField\r\n                                type=\"text\"\r\n                                name=\"contect\"\r\n                                id=\"standard-basic\"\r\n                                onChange={handleInput}\r\n                                value={state.contect}\r\n                                validators={['required']}\r\n                                label=\"Contact\"\r\n                                errorMessages={['this field is required']}\r\n                            />\r\n                            <TextField\r\n                                type=\"text\"\r\n                                name=\"email\"\r\n                                id=\"standard-basic\"\r\n                                onChange={handleInput}\r\n                                value={state.email}\r\n                                validators={['required']}\r\n                                label=\"Email\"\r\n                                errorMessages={['this field is required']}\r\n                            />\r\n                            <TextField\r\n                                type=\"text\"\r\n                                name=\"password\"\r\n                                id=\"standard-basic\"\r\n                                onChange={handleInput}\r\n                                value={state.password}\r\n                                label=\"New password\"\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Button\r\n                        color=\"primary\"\r\n                        variant=\"contained\"\r\n                        type=\"submit\"\r\n                        style={{ margin: '5px' }}\r\n                        // disabled={isLoading}\r\n                    >\r\n                        <Icon>send</Icon>\r\n                        <Span sx={{ pl: 1, textTransform: 'capitalize' }}>\r\n                            Submit\r\n                        </Span>\r\n                    </Button>\r\n                </ValidatorForm>\r\n            </SimpleCard>\r\n            {/* {showAlert ? (\r\n                <MyAlert\r\n                    isOpen={showAlert}\r\n                    typeSeverity={alertType}\r\n                    alrtTextToShow={alertText}\r\n                />\r\n            ) : null} */}\r\n        </ContainerForm>\r\n    )\r\n}\r\n\r\nexport default AdminProfile\r\n"],"sourceRoot":""}