{"version":3,"sources":["app/views/sessions/ForgotPassword.jsx"],"names":["FlexBox","styled","Box","display","alignItems","JustifyBox","justifyContent","ContentBox","height","padding","position","background","IMG","width","ForgotPasswordRoot","minHeight","maxWidth","borderRadius","margin","ForgotPassword","useState","state","setState","navigate","useNavigate","email","className","container","item","lg","md","sm","xs","p","src","alt","onSubmit","event","console","log","sx","mb","variant","label","onChange","target","name","value","type","size","validators","errorMessages","color","mr","ml","textTransform","onClick"],"mappings":"wNAOMA,EAAUC,YAAOC,IAAPD,EAAY,iBAAO,CAC/BE,QAAS,OACTC,WAAY,aAGVC,EAAaJ,YAAOD,EAAPC,EAAgB,iBAAO,CACtCK,eAAgB,aAGdC,EAAaN,YAAOC,IAAPD,EAAY,iBAAO,CAClCO,OAAQ,OACRC,QAAS,OACTC,SAAU,WACVC,WAAY,0BAGVC,EAAMX,YAAO,MAAPA,EAAc,iBAAO,CAC7BY,MAAO,WAGLC,EAAqBb,YAAOI,EAAPJ,EAAmB,iBAAO,CACjDU,WAAY,UACZI,UAAW,mBACX,UAAW,CACPC,SAAU,IACVC,aAAc,GACdC,OAAQ,YA4EDC,UAxEQ,WACnB,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACMC,EAAWC,cAaXC,EAAUJ,EAAVI,MAEN,OACI,cAACX,EAAD,UACI,cAAC,IAAD,CAAMY,UAAU,OAAhB,SACI,eAAC,IAAD,CAAMC,WAAS,EAAf,UACI,cAAC,IAAD,CAAMC,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAApC,SACI,cAAC3B,EAAD,CAAY4B,EAAG,EAAGzB,OAAO,OAAzB,SACI,cAACI,EAAD,CACIsB,IAAI,2CACJC,IAAI,SAIhB,cAAC,IAAD,CAAMP,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAApC,SACI,cAACzB,EAAD,UACI,eAAC,gBAAD,CAAe6B,SApBd,SAACC,GACtBC,QAAQC,IAAIlB,IAmBQ,UACI,cAAC,gBAAD,CACImB,GAAI,CAAEC,GAAI,EAAG5B,MAAO,QACpB6B,QAAQ,WACRC,MAAM,QACNC,SAhCX,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACpCzB,EAAS,2BACFD,GADC,kBAEHyB,EAAOC,MA8BgBC,KAAK,QACLF,KAAK,QACLG,KAAK,QACLF,MAAOtB,GAAS,GAChByB,WAAY,CAAC,WAAY,WACzBC,cAAe,CACX,yBACA,wBAGR,eAACnD,EAAD,WACI,cAAC,IAAD,CACI0C,QAAQ,YACRU,MAAM,UACNJ,KAAK,SAHT,4BAOA,cAAC,IAAD,CAAMR,GAAI,CAAEa,GAAI,EAAGC,GAAI,QAAvB,gBACA,cAAC,IAAD,CACId,GAAI,CAAEe,cAAe,cACrBC,QAAS,kBAAMjC,EAAS,oBAF5B","file":"static/js/30.6ed342a8.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { Card, Grid, Button } from '@mui/material'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { TextValidator, ValidatorForm } from 'react-material-ui-form-validator'\r\nimport { Span } from 'app/components/Typography'\r\nimport { Box, styled } from '@mui/system'\r\n\r\nconst FlexBox = styled(Box)(() => ({\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n}))\r\n\r\nconst JustifyBox = styled(FlexBox)(() => ({\r\n    justifyContent: 'center',\r\n}))\r\n\r\nconst ContentBox = styled(Box)(() => ({\r\n    height: '100%',\r\n    padding: '32px',\r\n    position: 'relative',\r\n    background: 'rgba(0, 0, 0, 0.01)',\r\n}))\r\n\r\nconst IMG = styled('img')(() => ({\r\n    width: '100%',\r\n}))\r\n\r\nconst ForgotPasswordRoot = styled(JustifyBox)(() => ({\r\n    background: '#1A2038',\r\n    minHeight: '100vh !important',\r\n    '& .card': {\r\n        maxWidth: 800,\r\n        borderRadius: 12,\r\n        margin: '1rem',\r\n    },\r\n}))\r\n\r\nconst ForgotPassword = () => {\r\n    const [state, setState] = useState({})\r\n    const navigate = useNavigate()\r\n\r\n    const handleChange = ({ target: { name, value } }) => {\r\n        setState({\r\n            ...state,\r\n            [name]: value,\r\n        })\r\n    }\r\n\r\n    const handleFormSubmit = (event) => {\r\n        console.log(state)\r\n    }\r\n\r\n    let { email } = state\r\n\r\n    return (\r\n        <ForgotPasswordRoot>\r\n            <Card className=\"card\">\r\n                <Grid container>\r\n                    <Grid item lg={5} md={5} sm={5} xs={12}>\r\n                        <JustifyBox p={4} height=\"100%\">\r\n                            <IMG\r\n                                src=\"/assets/images/illustrations/dreamer.svg\"\r\n                                alt=\"\"\r\n                            />\r\n                        </JustifyBox>\r\n                    </Grid>\r\n                    <Grid item lg={7} md={7} sm={7} xs={12}>\r\n                        <ContentBox>\r\n                            <ValidatorForm onSubmit={handleFormSubmit}>\r\n                                <TextValidator\r\n                                    sx={{ mb: 3, width: '100%' }}\r\n                                    variant=\"outlined\"\r\n                                    label=\"Email\"\r\n                                    onChange={handleChange}\r\n                                    type=\"email\"\r\n                                    name=\"email\"\r\n                                    size=\"small\"\r\n                                    value={email || ''}\r\n                                    validators={['required', 'isEmail']}\r\n                                    errorMessages={[\r\n                                        'this field is required',\r\n                                        'email is not valid',\r\n                                    ]}\r\n                                />\r\n                                <FlexBox>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        type=\"submit\"\r\n                                    >\r\n                                        Reset Password\r\n                                    </Button>\r\n                                    <Span sx={{ mr: 1, ml: '16px' }}>or</Span>\r\n                                    <Button\r\n                                        sx={{ textTransform: 'capitalize' }}\r\n                                        onClick={() => navigate(\"/session/signin\")}\r\n                                    >\r\n                                        Sign in\r\n                                    </Button>\r\n                                </FlexBox>\r\n                            </ValidatorForm>\r\n                        </ContentBox>\r\n                    </Grid>\r\n                </Grid>\r\n            </Card>\r\n        </ForgotPasswordRoot>\r\n    )\r\n}\r\n\r\nexport default ForgotPassword\r\n"],"sourceRoot":""}