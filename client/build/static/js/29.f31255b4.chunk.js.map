{"version":3,"sources":["app/views/dashboard/shared/MinimumStockHospital.jsx","app/views/dashboard/shared/TopSellingTable.jsx","app/views/dashboard/shared/InventoryDashboard.jsx","app/views/dashboard/InventoryManagement.jsx"],"names":["AllStockOutTrueStatus","palette","useTheme","bgError","error","main","bgSecondary","secondary","React","useState","rowsPerPage","setRowsPerPage","page","setPage","expanded","setExpanded","useSelector","state","hospitalList","minimumThresold","dispatch","useDispatch","useEffect","hospitalMinimumTheresold","console","log","length","Box","width","AccordionSummary","id","slice","map","subscriber","index","Accordion","onChange","panel","event","isExpanded","expandIcon","_id","AccordionDetails","style","backgroundColor","TableHead","TableRow","TableCell","TableBody","belowLimit","stock_name","totalQtyUser","bgcolor","minimumLimit","TablePagination","sx","px","rowsPerPageOptions","component","count","backIconButtonProps","nextIconButtonProps","onPageChange","newPage","onRowsPerPageChange","target","value","AllStock","bgPrimary","primary","stockList","stockData","getAllData","filterStockData","filter","data","totalQty","title","overflow","colSpan","InventoryDashboard","Grid","container","spacing","item","sm","xs","TopSellingTable","Container","styled","theme","margin","breakpoints","down","InventoryManagement","tabIndex","setTabIndex","className","Tabs","mt","mb","e","indicatorColor","textColor","ind","Tab","label","textTransform","MinimumStockHospital"],"mappings":"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","file":"static/js/29.f31255b4.chunk.js","sourcesContent":["import Accordion from '@mui/material/Accordion'\r\nimport AccordionDetails from '@mui/material/AccordionDetails'\r\nimport AccordionSummary from '@mui/material/AccordionSummary'\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\r\nimport { Box, useTheme } from '@mui/system'\r\nimport {\r\n    SimpleCard,\r\n    Heading,\r\n    SecondaryHeading,\r\n    ContainerTable,\r\n    StyledTable,\r\n    StockAlert,\r\n    H1Alert,\r\n} from 'app/components'\r\nimport {\r\n    TableHead,\r\n    TableBody,\r\n    TableRow,\r\n    TableCell,\r\n    TablePagination,\r\n} from '@mui/material'\r\nimport React, { useEffect } from 'react'\r\n// import\r\nimport { hospitalMinimumTheresold } from 'app/redux/actions/admin/HospitalActions'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nconst AllStockOutTrueStatus = () => {\r\n    const { palette } = useTheme()\r\n    const bgError = palette.error.main\r\n    const bgSecondary = palette.secondary.main\r\n\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10)\r\n    const [page, setPage] = React.useState(0)\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage)\r\n    }\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value)\r\n        setPage(0)\r\n    }\r\n    // for panel setup\r\n    const [expanded, setExpanded] = React.useState(false)\r\n    const handleChange = (panel) => (event, isExpanded) => {\r\n        setExpanded(isExpanded ? panel : false)\r\n    }\r\n\r\n    // important\r\n    let { minimumThresold = [] } = useSelector((state) => state.hospitalList)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(hospitalMinimumTheresold())\r\n        setExpanded(false)\r\n    }, [dispatch])\r\n\r\n    console.log('minimumThresold', minimumThresold)\r\n    return (\r\n        <ContainerTable>\r\n            <SimpleCard>\r\n                {minimumThresold.length === 0 ? (\r\n                    <H1Alert />\r\n                ) : (\r\n                    <Box width=\"100%\">\r\n                        <AccordionSummary\r\n                            aria-controls=\"panel1bh-content\"\r\n                            id=\"panel1bh-header\"\r\n                        >\r\n                            <SecondaryHeading>Hospital Name</SecondaryHeading>\r\n                        </AccordionSummary>\r\n                        {/* data print start from here*/}\r\n                        {minimumThresold\r\n                            .slice(\r\n                                page * rowsPerPage,\r\n                                page * rowsPerPage + rowsPerPage\r\n                            )\r\n                            .map((subscriber, index) => (\r\n                                <Accordion\r\n                                    expanded={expanded === `panel${index}`}\r\n                                    onChange={handleChange(`panel${index}`)}\r\n                                    key={index}\r\n                                >\r\n                                    <AccordionSummary\r\n                                        expandIcon={<ExpandMoreIcon />}\r\n                                        aria-controls=\"panel2bh-content\"\r\n                                        id=\"panel2bh-header\"\r\n                                    >\r\n                                        <Heading> {subscriber._id}</Heading>\r\n                                    </AccordionSummary>\r\n                                    <AccordionDetails\r\n                                        style={{ backgroundColor: '#F5F5F5' }}\r\n                                    >\r\n                                        <StyledTable>\r\n                                            <TableHead\r\n                                                style={{\r\n                                                    backgroundColor: '#EBF5FB',\r\n                                                }}\r\n                                            >\r\n                                                <TableRow>\r\n                                                    <TableCell>\r\n                                                        Stock Name\r\n                                                    </TableCell>\r\n                                                    <TableCell>\r\n                                                        Total Qty\r\n                                                    </TableCell>\r\n                                                    <TableCell>\r\n                                                        Minimum required\r\n                                                        quantity\r\n                                                    </TableCell>\r\n                                                </TableRow>\r\n                                            </TableHead>\r\n                                            <TableBody>\r\n                                                {subscriber.belowLimit.map(\r\n                                                    (subscriber, index) => (\r\n                                                        <TableRow key={index}>\r\n                                                            <TableCell>\r\n                                                                {\r\n                                                                    subscriber.stock_name\r\n                                                                }\r\n                                                            </TableCell>\r\n                                                            <TableCell>\r\n                                                                {subscriber.totalQtyUser ? (\r\n                                                                    <StockAlert\r\n                                                                        bgcolor={\r\n                                                                            bgSecondary\r\n                                                                        }\r\n                                                                    >\r\n                                                                        {\r\n                                                                            subscriber.totalQtyUser\r\n                                                                        }{' '}\r\n                                                                        available\r\n                                                                    </StockAlert>\r\n                                                                ) : (\r\n                                                                    <StockAlert\r\n                                                                        bgcolor={\r\n                                                                            bgError\r\n                                                                        }\r\n                                                                    >\r\n                                                                        out of\r\n                                                                        stock\r\n                                                                    </StockAlert>\r\n                                                                )}\r\n                                                            </TableCell>\r\n                                                            <TableCell>\r\n                                                                {\r\n                                                                    subscriber.minimumLimit\r\n                                                                }\r\n                                                            </TableCell>\r\n                                                        </TableRow>\r\n                                                    )\r\n                                                )}\r\n                                            </TableBody>\r\n                                        </StyledTable>\r\n                                    </AccordionDetails>\r\n                                </Accordion>\r\n                            ))}\r\n\r\n                        <TablePagination\r\n                            sx={{ px: 2 }}\r\n                            rowsPerPageOptions={[5, 10, 25]}\r\n                            component=\"div\"\r\n                            count={minimumThresold.length}\r\n                            rowsPerPage={rowsPerPage}\r\n                            page={page}\r\n                            backIconButtonProps={{\r\n                                'aria-label': 'Previous Page',\r\n                            }}\r\n                            nextIconButtonProps={{\r\n                                'aria-label': 'Next Page',\r\n                            }}\r\n                            onPageChange={handleChangePage}\r\n                            onRowsPerPageChange={handleChangeRowsPerPage}\r\n                        />\r\n                    </Box>\r\n                )}\r\n            </SimpleCard>\r\n        </ContainerTable>\r\n    )\r\n}\r\n\r\nexport default AllStockOutTrueStatus\r\n","import {\r\n    TableHead,\r\n    TableBody,\r\n    TableRow,\r\n    TableCell,\r\n    TablePagination,\r\n} from '@mui/material'\r\nimport React, { useEffect } from 'react'\r\nimport { Box, useTheme } from '@mui/system'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n    SimpleCard,\r\n    ContainerTable,\r\n    StyledTable,\r\n    StockAlert,\r\n    H1Alert,\r\n} from 'app/components'\r\n\r\nimport { getAllData } from 'app/redux/actions/admin/StockActions'\r\n\r\nconst AllStock = () => {\r\n    const { palette } = useTheme()\r\n    const bgError = palette.error.main\r\n    const bgPrimary = palette.primary.main\r\n    const bgSecondary = palette.secondary.main\r\n\r\n    let { stockData = [] } = useSelector((state) => state.stockList)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllData())\r\n    }, [dispatch])\r\n\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10)\r\n    const [page, setPage] = React.useState(0)\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage)\r\n    }\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value)\r\n        setPage(0)\r\n    }\r\n\r\n    const filterStockData = stockData.filter((data) => {\r\n        console.log(data.minimumLimit, '>=', data.totalQty)\r\n        return data.minimumLimit >= data.totalQty\r\n    })\r\n\r\n    return (\r\n        <ContainerTable>\r\n            {filterStockData.length === 0 ? (\r\n                <H1Alert />\r\n            ) : (\r\n                <SimpleCard title=\"Stocks List\">\r\n                    <Box width=\"100%\" overflow=\"auto\">\r\n                        <StyledTable>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>Stock Name</TableCell>\r\n\r\n                                    <TableCell> Total Qty </TableCell>\r\n\r\n                                    {/* <TableCell>Address</TableCell>\r\n                        <TableCell align=\"center\">Pincode</TableCell> */}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {filterStockData\r\n                                    .slice(\r\n                                        page * rowsPerPage,\r\n                                        page * rowsPerPage + rowsPerPage\r\n                                    )\r\n                                    .map((subscriber, index) => (\r\n                                        <TableRow key={index}>\r\n                                            <TableCell>\r\n                                                {subscriber.stock_name}\r\n                                            </TableCell>\r\n\r\n                                            <TableCell\r\n                                                sx={{ px: 0 }}\r\n                                                colSpan={0}\r\n                                            >\r\n                                                {subscriber.totalQty ? (\r\n                                                    subscriber.totalQty <\r\n                                                    subscriber.minimumLimit ? (\r\n                                                        <StockAlert\r\n                                                            bgcolor={\r\n                                                                bgSecondary\r\n                                                            }\r\n                                                        >\r\n                                                            {\r\n                                                                subscriber.totalQty\r\n                                                            }{' '}\r\n                                                            available\r\n                                                        </StockAlert>\r\n                                                    ) : (\r\n                                                        <StockAlert\r\n                                                            bgcolor={bgPrimary}\r\n                                                        >\r\n                                                            {\r\n                                                                subscriber.totalQty\r\n                                                            }{' '}\r\n                                                            available\r\n                                                        </StockAlert>\r\n                                                    )\r\n                                                ) : (\r\n                                                    <StockAlert\r\n                                                        bgcolor={bgError}\r\n                                                    >\r\n                                                        out of stock\r\n                                                    </StockAlert>\r\n                                                )}\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    ))}\r\n                            </TableBody>\r\n                        </StyledTable>\r\n\r\n                        <TablePagination\r\n                            sx={{ px: 2 }}\r\n                            rowsPerPageOptions={[5, 10, 25]}\r\n                            component=\"div\"\r\n                            count={filterStockData.length}\r\n                            rowsPerPage={rowsPerPage}\r\n                            page={page}\r\n                            backIconButtonProps={{\r\n                                'aria-label': 'Previous Page',\r\n                            }}\r\n                            nextIconButtonProps={{\r\n                                'aria-label': 'Next Page',\r\n                            }}\r\n                            onPageChange={handleChangePage}\r\n                            onRowsPerPageChange={handleChangeRowsPerPage}\r\n                        />\r\n                    </Box>\r\n                </SimpleCard>\r\n            )}\r\n        </ContainerTable>\r\n    )\r\n}\r\n\r\nexport default AllStock\r\n","import React, { Fragment } from 'react'\r\nimport TopSellingTable from './TopSellingTable'\r\nimport { Grid } from '@mui/material'\r\n\r\nconst InventoryDashboard = () => {\r\n    return (\r\n        <Fragment>\r\n            <Grid container spacing={3}>\r\n                <Grid item sm={6} xs={12}>\r\n                    <TopSellingTable />\r\n                </Grid>\r\n            </Grid>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default InventoryDashboard\r\n","import React, { useState } from 'react'\r\nimport { Tabs, Tab } from '@mui/material'\r\nimport MinimumStockHospital from './shared/MinimumStockHospital'\r\nimport InventoryDashboard from './shared/InventoryDashboard'\r\nimport { styled } from '@mui/system'\r\n\r\nconst Container = styled('div')(({ theme }) => ({\r\n    margin: '30px',\r\n    [theme.breakpoints.down('sm')]: {\r\n        margin: '16px',\r\n    },\r\n}))\r\n\r\nconst InventoryManagement = () => {\r\n    const [tabIndex, setTabIndex] = useState(0)\r\n\r\n    return (\r\n        <Container className=\"analytics\">\r\n            <Tabs\r\n                sx={{ mt: 2, mb: 3 }}\r\n                value={tabIndex}\r\n                onChange={(e, value) => setTabIndex(value)}\r\n                indicatorColor=\"primary\"\r\n                textColor=\"primary\"\r\n            >\r\n                {['Hospital Srock', 'Admin '].map((item, ind) => (\r\n                    <Tab\r\n                        key={ind}\r\n                        value={ind}\r\n                        label={item}\r\n                        sx={{\r\n                            px: '35px',\r\n                            textTransform: 'capitalize',\r\n                        }}\r\n                    />\r\n                ))}\r\n            </Tabs>\r\n\r\n            {tabIndex === 0 && <MinimumStockHospital />}\r\n            {tabIndex === 1 && <InventoryDashboard />}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default InventoryManagement\r\n"],"sourceRoot":""}