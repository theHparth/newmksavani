{"version":3,"sources":["app/views/adminUserCreatedby/userStockIn/PendingStockIn.js"],"names":["PendingStockIn","useState","hospitalDa","setHospitalDa","shouldOpenEditorDialog","setShouldOpenEditorDialog","shouldOpenConfirmationDialog","setShouldOpenConfirmationDialog","info","setInfo","handleDialogClose","dispatch","AllstockInUser","status","React","searchText","setSearchText","location","useLocation","privatrRoute","pathname","useSelector","state","stockInUserList","stockInUserData","isLoading","useDispatch","useEffect","console","log","length","setExpanded","rowsPerPage","setRowsPerPage","page","setPage","expanded","className","routeSegments","name","path","onSearch","value","onSearchValueChange","width","id","slice","map","subscriber","index","onChange","panel","event","isExpanded","expandIcon","invoiceNum","moment","createdAt","format","color","style","backgroundColor","variant","onClick","hospitalId","_id","stockOutDetail","subscriberInside","stock_name","totalBox","totalQtyInOneBox","price","align","messageForHospital","open","onConfirmDialogClose","onYesClick","statusChange","then","text","handleClose","invoiceInfo","sx","px","rowsPerPageOptions","component","count","backIconButtonProps","nextIconButtonProps","onPageChange","newPage","onRowsPerPageChange","target"],"mappings":"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","file":"static/js/20.0beef29c.chunk.js","sourcesContent":["import Accordion from '@mui/material/Accordion'\r\nimport AccordionDetails from '@mui/material/AccordionDetails'\r\nimport AccordionSummary from '@mui/material/AccordionSummary'\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\r\nimport { Box } from '@mui/system'\r\nimport {\r\n    Breadcrumb,\r\n    SimpleCard,\r\n    Heading,\r\n    SecondaryHeading,\r\n    ThirdHeading,\r\n    ContainerTable,\r\n    StyledTable,\r\n    InvoiceDetails,\r\n    LodingShow,\r\n    SearchBox,\r\n} from 'app/components'\r\nimport { useLocation } from 'react-router-dom' // my import\r\nimport {\r\n    TableHead,\r\n    TableBody,\r\n    TableRow,\r\n    TableCell,\r\n    Icon,\r\n    TablePagination,\r\n    Button,\r\n    FormLabel,\r\n} from '@mui/material'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport React, { useEffect, useState } from 'react'\r\nimport {\r\n    AllstockInUser,\r\n    statusChange,\r\n} from 'app/redux/actions/userCreatedByAdmin/StockInUserAction'\r\nimport moment from 'moment'\r\nimport ConfirmationDialog from 'app/components/ConfirmationDialog/ConfirmationDialog'\r\n\r\nconst PendingStockIn = () => {\r\n    // for printing and deleting pperpose\r\n    const [hospitalDa, setHospitalDa] = useState(null)\r\n    const [shouldOpenEditorDialog, setShouldOpenEditorDialog] = useState(false)\r\n    const [shouldOpenConfirmationDialog, setShouldOpenConfirmationDialog] =\r\n        useState(false)\r\n    const [info, setInfo] = useState()\r\n\r\n    const handleDialogClose = () => {\r\n        setShouldOpenEditorDialog(false)\r\n        setShouldOpenConfirmationDialog(false)\r\n        dispatch(AllstockInUser({ status: false }))\r\n    }\r\n    const handleDeleteUser = (hospitalId) => {\r\n        setHospitalDa(hospitalId)\r\n        setShouldOpenConfirmationDialog(true)\r\n    }\r\n\r\n    const handleConfirmationResponse = () => {\r\n        dispatch(statusChange(hospitalDa)).then(() => {\r\n            handleDialogClose()\r\n            setExpanded(false)\r\n        })\r\n    }\r\n\r\n    // search for all\r\n    let [searchText, setSearchText] = React.useState('')\r\n\r\n    const handleChangeSearch = (value) => {\r\n        setSearchText(value)\r\n    }\r\n\r\n    // check for route\r\n    const location = useLocation()\r\n\r\n    var privatrRoute = false\r\n    if (location.pathname === '/allReceivedSrtock') {\r\n        privatrRoute = true\r\n    }\r\n\r\n    // get data\r\n    let { stockInUserData = [], isLoading } = useSelector(\r\n        (state) => state.stockInUserList\r\n    )\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        console.log(stockInUserData.length, 'stockInUserData.length')\r\n        console.log(stockInUserData, 'stockInUserData')\r\n\r\n        // if (stockInUserData == [] || stockInUserData.length == 0) {\r\n        console.log('a------------')\r\n        // window.location.reload()\r\n        // }\r\n    }, [])\r\n    useEffect(() => {\r\n        var state = { searchText }\r\n        state.status = false\r\n        if (privatrRoute) {\r\n            state.status = true\r\n        }\r\n        dispatch(AllstockInUser(state))\r\n        setExpanded(false)\r\n    }, [dispatch, privatrRoute, searchText])\r\n\r\n    // for pagination purposes\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10)\r\n    const [page, setPage] = React.useState(0)\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage)\r\n    }\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value)\r\n        setPage(0)\r\n    }\r\n    // for penal setup\r\n    const [expanded, setExpanded] = React.useState(false)\r\n    const handleChange = (panel) => (event, isExpanded) => {\r\n        setExpanded(isExpanded ? panel : false)\r\n    }\r\n\r\n    return (\r\n        <ContainerTable>\r\n            <div className=\"breadcrumb\">\r\n                <Breadcrumb\r\n                    routeSegments={[\r\n                        { name: 'Add Stock', path: '/addStock' },\r\n                        { name: 'Table' },\r\n                    ]}\r\n                />\r\n            </div>\r\n            <SearchBox\r\n                onSearch={handleChangeSearch}\r\n                onSearchValueChange={searchText}\r\n            />\r\n            {isLoading && <LodingShow />}\r\n\r\n            <SimpleCard>\r\n                <Box width=\"100%\">\r\n                    <AccordionSummary\r\n                        aria-controls=\"panel1bh-content\"\r\n                        id=\"panel1bh-header\"\r\n                    >\r\n                        <Heading>Invoice No</Heading>\r\n                        <ThirdHeading>Date</ThirdHeading>\r\n                    </AccordionSummary>\r\n                    {/* data print start from here*/}\r\n                    {stockInUserData\r\n                        .slice(\r\n                            page * rowsPerPage,\r\n                            page * rowsPerPage + rowsPerPage\r\n                        )\r\n                        .map((subscriber, index) => (\r\n                            <Accordion\r\n                                expanded={expanded === `panel${index}`}\r\n                                onChange={handleChange(`panel${index}`)}\r\n                                key={index}\r\n                            >\r\n                                <AccordionSummary\r\n                                    expandIcon={<ExpandMoreIcon />}\r\n                                    aria-controls=\"panel2bh-content\"\r\n                                    id=\"panel2bh-header\"\r\n                                >\r\n                                    <Heading>{subscriber.invoiceNum}</Heading>\r\n                                    <SecondaryHeading>\r\n                                        {moment(subscriber.createdAt).format(\r\n                                            'MMM Do, YYYY'\r\n                                        )}\r\n                                    </SecondaryHeading>\r\n\r\n                                    {privatrRoute && (\r\n                                        <ThirdHeading>\r\n                                            <FormLabel color=\"primary\">\r\n                                                Received\r\n                                            </FormLabel>\r\n                                        </ThirdHeading>\r\n                                    )}\r\n                                </AccordionSummary>\r\n                                <AccordionDetails\r\n                                    style={{ backgroundColor: '#F5F5F5' }}\r\n                                >\r\n                                    <StyledTable>\r\n                                        <TableHead\r\n                                            style={{\r\n                                                backgroundColor: '#EBF5FB',\r\n                                            }}\r\n                                        >\r\n                                            <TableRow>\r\n                                                <TableCell>\r\n                                                    Stock Name\r\n                                                </TableCell>\r\n                                                <TableCell>Total Qty</TableCell>\r\n                                                <TableCell>Price</TableCell>\r\n                                                <TableCell>\r\n                                                    {!privatrRoute && (\r\n                                                        <Button\r\n                                                            variant=\"contained\"\r\n                                                            color=\"error\"\r\n                                                            onClick={() =>\r\n                                                                handleDeleteUser(\r\n                                                                    subscriber._id\r\n                                                                )\r\n                                                            }\r\n                                                        >\r\n                                                            Pending\r\n                                                        </Button>\r\n                                                    )}\r\n                                                    <Button\r\n                                                        variant=\"outlined\"\r\n                                                        color=\"primary\"\r\n                                                        onClick={() => {\r\n                                                            setShouldOpenEditorDialog(\r\n                                                                true\r\n                                                            )\r\n                                                            setInfo(subscriber)\r\n                                                        }}\r\n                                                    >\r\n                                                        <Icon color=\"primary\">\r\n                                                            print\r\n                                                        </Icon>\r\n                                                        {/* Print */}\r\n                                                    </Button>\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody>\r\n                                            {subscriber.stockOutDetail.map(\r\n                                                (subscriberInside, index) => (\r\n                                                    <TableRow key={index}>\r\n                                                        <TableCell>\r\n                                                            {\r\n                                                                subscriberInside.stock_name\r\n                                                            }\r\n                                                        </TableCell>\r\n                                                        <TableCell>\r\n                                                            {subscriberInside.totalBox *\r\n                                                                subscriberInside.totalQtyInOneBox}\r\n                                                        </TableCell>\r\n                                                        <TableCell>\r\n                                                            ${' '}\r\n                                                            {subscriberInside.price\r\n                                                                ? subscriberInside.price\r\n                                                                : 0}\r\n                                                        </TableCell>\r\n                                                        <TableCell align=\"center\">\r\n                                                            {/* status change button */}\r\n                                                        </TableCell>\r\n                                                    </TableRow>\r\n                                                )\r\n                                            )}\r\n                                            {subscriber.messageForHospital && (\r\n                                                <TableCell>\r\n                                                    Note :{' '}\r\n                                                    {\r\n                                                        subscriber.messageForHospital\r\n                                                    }\r\n                                                </TableCell>\r\n                                            )}\r\n                                        </TableBody>\r\n                                    </StyledTable>\r\n                                </AccordionDetails>\r\n                            </Accordion>\r\n                        ))}\r\n                    {shouldOpenConfirmationDialog && (\r\n                        <ConfirmationDialog\r\n                            open={shouldOpenConfirmationDialog}\r\n                            onConfirmDialogClose={handleDialogClose}\r\n                            onYesClick={handleConfirmationResponse}\r\n                            text=\"Are you sure you received product?\"\r\n                        />\r\n                    )}\r\n                    {shouldOpenEditorDialog && (\r\n                        <InvoiceDetails\r\n                            handleClose={handleDialogClose}\r\n                            open={shouldOpenEditorDialog}\r\n                            invoiceInfo={info}\r\n                        />\r\n                    )}\r\n                    <TablePagination\r\n                        sx={{ px: 2 }}\r\n                        rowsPerPageOptions={[5, 10, 25]}\r\n                        component=\"div\"\r\n                        count={stockInUserData.length}\r\n                        rowsPerPage={rowsPerPage}\r\n                        page={page}\r\n                        backIconButtonProps={{\r\n                            'aria-label': 'Previous Page',\r\n                        }}\r\n                        nextIconButtonProps={{\r\n                            'aria-label': 'Next Page',\r\n                        }}\r\n                        onPageChange={handleChangePage}\r\n                        onRowsPerPageChange={handleChangeRowsPerPage}\r\n                    />\r\n                </Box>\r\n            </SimpleCard>\r\n        </ContainerTable>\r\n    )\r\n}\r\n\r\nexport default PendingStockIn\r\n"],"sourceRoot":""}