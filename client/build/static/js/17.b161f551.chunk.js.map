{"version":3,"sources":["app/components/MatxLayout/Layout1/Layout1Topbar.jsx","app/components/Brand/Brand.jsx","app/navigationsUser.js","app/components/Sidenav/Sidenav.jsx","app/components/MatxLayout/Layout1/Layout1Sidenav.jsx","app/components/MatxTheme/SidenavTheme/SidenavTheme.jsx","app/components/SecondarySidebar/SecondarySidebarToggle.jsx","app/components/MatxCustomizer/BadgeSelected.jsx","app/components/MatxCustomizer/MatxCustomizer.jsx","app/components/SecondarySidebar/SecondarySidebarContent.jsx","app/components/MatxTheme/SecondarySidenavTheme/SecondarySidenavTheme.jsx","app/components/SecondarySidebar/SecondarySidebar.jsx","app/components/MatxLayout/Layout1/Layout1.jsx"],"names":["StyledIconButton","styled","IconButton","color","theme","palette","text","primary","TopbarRoot","top","zIndex","transition","boxShadow","themeShadows","height","topBarHeight","TopbarContainer","Box","padding","paddingLeft","paddingRight","display","alignItems","justifyContent","background","main","breakpoints","down","UserMenu","cursor","borderRadius","margin","StyledItem","MenuItem","minWidth","width","textDecoration","marginRight","Layout1Topbar","adminInfo","hospitalInfo","useTheme","useSettings","settings","updateSettings","logout","useAuth","user","localStorage","getItem","hospitalData","JSON","parse","isMdScreen","useMediaQuery","onClick","mode","sidebarSettings","layout1Settings","leftSidebar","Icon","MatxMenu","menuButton","Hidden","xsDown","Avatar","sx","to","React","memo","BrandRoot","StyledSpan","Span","fontSize","marginLeft","Brand","children","className","navigationsUser","name","icon","path","iconText","StyledScrollBar","Scrollbar","position","SideNavMobile","left","bottom","right","up","Sidenav","options","suppressScrollX","items","navigations","activeLayoutSettingsName","activeLayout","activeLayoutSettings","updateSidebarMode","SidebarNavRoot","primaryBg","bgImgURL","backgroundRepeat","backgroundPosition","backgroundSize","overflow","backgroundImage","sideNavWidth","maxWidth","NavListBox","flexDirection","Layout1Sidenav","primaryRGB","convertHexToRGB","sidenavCompactWidth","smDown","Switch","onChange","checked","size","SidenavTheme","sidenavTheme","themes","ThemeProvider","Toggle","SecondarySidebarToggle","toggle","secondarySidebar","open","textColor","contrastText","clsx","Fab","BadgeSelected","Badge","Label","secondary","backgroundColor","dark","fontWeight","transform","marginBottom","letterSpacing","MaxCustomaizer","paddingBottom","default","LayoutBox","marginTop","Controller","minHeight","IMG","demoLayouts","thumbnail","isPro","activeTheme","bgOpacity","topbar","fixed","footer","MatxCustomizer","props","useState","setOpen","tooglePanel","Tooltip","title","placement","Drawer","anchor","variant","onClose","ModalProps","keepMounted","ml","mb","mx","map","layout","badgeContent","invisible","Card","elevation","Button","src","alt","SidebarRoot","shadows","SecondarySidebarContent","m","SecondarySidenavTheme","classes","SecondarySidebar","secondarySidebarTheme","chatTheme","Layout1Root","ContentBox","overflowY","overflowX","flexGrow","LayoutContainer","verticalAlign","Layout1","topbarTheme","sidenavMode","showSidenav","show","sidenavWidth","getSidenavWidth","ref","useRef","layoutClasses","type","useEffect","current","sidebarMode","perfectScrollbar","MatxSuspense"],"mappings":"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","file":"static/js/17.b161f551.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport useAuth from 'app/hooks/useAuth'\r\nimport useSettings from 'app/hooks/useSettings'\r\nimport { styled, useTheme, Box } from '@mui/system'\r\nimport { Span } from '../../../components/Typography'\r\n\r\nimport { themeShadows } from 'app/components/MatxTheme/themeColors'\r\nimport {\r\n    Icon,\r\n    IconButton,\r\n    MenuItem,\r\n    Avatar,\r\n    useMediaQuery,\r\n    Hidden,\r\n} from '@mui/material'\r\nimport { topBarHeight } from 'app/utils/constant'\r\nimport MatxMenu from 'app/components/MatxMenu/MatxMenu'\r\n\r\nconst StyledIconButton = styled(IconButton)(({ theme }) => ({\r\n    color: theme.palette.text.primary,\r\n}))\r\n\r\nconst TopbarRoot = styled('div')(({ theme }) => ({\r\n    top: 0,\r\n    zIndex: 96,\r\n    transition: 'all 0.3s ease',\r\n    boxShadow: themeShadows[8],\r\n    height: topBarHeight,\r\n}))\r\n\r\nconst TopbarContainer = styled(Box)(({ theme }) => ({\r\n    padding: '8px',\r\n    paddingLeft: 18,\r\n    paddingRight: 20,\r\n    height: '100%',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    background: theme.palette.primary.main,\r\n    [theme.breakpoints.down('sm')]: {\r\n        paddingLeft: 16,\r\n        paddingRight: 16,\r\n    },\r\n    [theme.breakpoints.down('xs')]: {\r\n        paddingLeft: 14,\r\n        paddingRight: 16,\r\n    },\r\n}))\r\n\r\nconst UserMenu = styled(Box)(() => ({\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    cursor: 'pointer',\r\n    borderRadius: 24,\r\n    padding: 4,\r\n    '& span': {\r\n        margin: '0 8px',\r\n    },\r\n}))\r\n\r\nconst StyledItem = styled(MenuItem)(({ theme }) => ({\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    minWidth: 185,\r\n    '& a': {\r\n        width: '100%',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        textDecoration: 'none',\r\n    },\r\n    '& span': {\r\n        marginRight: '10px',\r\n        color: theme.palette.text.primary,\r\n    },\r\n}))\r\n\r\nconst Layout1Topbar = () => {\r\n    const theme = useTheme()\r\n    const { settings, updateSettings } = useSettings()\r\n    const { logout } = useAuth()\r\n    const user = localStorage.getItem('user')\r\n    const hospitalData = localStorage.getItem('hospital')\r\n    var adminInfo\r\n    if (user) {\r\n        adminInfo = JSON.parse(user)\r\n    }\r\n    var hospitalInfo\r\n    if (hospitalData) {\r\n        hospitalInfo = JSON.parse(hospitalData)\r\n    }\r\n\r\n    const isMdScreen = useMediaQuery(theme.breakpoints.down('md'))\r\n\r\n    const updateSidebarMode = (sidebarSettings) => {\r\n        updateSettings({\r\n            layout1Settings: {\r\n                leftSidebar: {\r\n                    ...sidebarSettings,\r\n                },\r\n            },\r\n        })\r\n    }\r\n\r\n    const handleSidebarToggle = () => {\r\n        let { layout1Settings } = settings\r\n        let mode\r\n        if (isMdScreen) {\r\n            mode =\r\n                layout1Settings.leftSidebar.mode === 'close'\r\n                    ? 'mobile'\r\n                    : 'close'\r\n        } else {\r\n            mode =\r\n                layout1Settings.leftSidebar.mode === 'full' ? 'close' : 'full'\r\n        }\r\n        updateSidebarMode({ mode })\r\n    }\r\n\r\n    return (\r\n        <TopbarRoot>\r\n            <TopbarContainer>\r\n                <Box display=\"flex\">\r\n                    <StyledIconButton onClick={handleSidebarToggle}>\r\n                        <Icon>menu</Icon>\r\n                    </StyledIconButton>\r\n                </Box>\r\n                <Box display=\"flex\" alignItems=\"center\">\r\n                    <MatxMenu\r\n                        menuButton={\r\n                            <UserMenu>\r\n                                <Hidden xsDown>\r\n                                    <Span>\r\n                                        Hi{' '}\r\n                                        <strong>\r\n                                            {user\r\n                                                ? adminInfo['name']\r\n                                                : hospitalInfo['hospitalName']}\r\n                                        </strong>\r\n                                    </Span>\r\n                                </Hidden>\r\n                                <Avatar\r\n                                    // src={user.avatar}\r\n                                    sx={{ cursor: 'pointer' }}\r\n                                />\r\n                            </UserMenu>\r\n                        }\r\n                    >\r\n                        <StyledItem>\r\n                            <Link to=\"/\">\r\n                                <Icon> home </Icon>\r\n                                <Span> Home </Span>\r\n                            </Link>\r\n                        </StyledItem>\r\n                        <StyledItem>\r\n                            <Link to=\"/myProfile\">\r\n                                <Icon> person </Icon>\r\n                                <Span> Profile </Span>\r\n                            </Link>\r\n                        </StyledItem>\r\n\r\n                        <StyledItem onClick={logout}>\r\n                            <Icon> power_settings_new </Icon>\r\n                            <Span> Logout </Span>\r\n                        </StyledItem>\r\n                    </MatxMenu>\r\n                </Box>\r\n            </TopbarContainer>\r\n        </TopbarRoot>\r\n    )\r\n}\r\n\r\nexport default React.memo(Layout1Topbar)\r\n","import React from 'react'\r\nimport { Span } from '../../components/Typography'\r\nimport { styled, Box } from '@mui/system'\r\nimport useSettings from 'app/hooks/useSettings'\r\n\r\nconst BrandRoot = styled(Box)(({ theme }) => ({\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    padding: '20px 18px 20px 29px',\r\n}))\r\n\r\nconst StyledSpan = styled(Span)(({ theme, mode }) => ({\r\n    fontSize: 18,\r\n    marginLeft: '.5rem',\r\n    display: mode === 'compact' ? 'none' : 'block',\r\n}))\r\n\r\nconst Brand = ({ children }) => {\r\n    const { settings } = useSettings()\r\n    const leftSidebar = settings.layout1Settings.leftSidebar\r\n    const { mode } = leftSidebar\r\n\r\n    return (\r\n        <BrandRoot>\r\n            <Box display=\"flex\" alignItems=\"center\">\r\n                {/* <MatxLogo /> */}\r\n                <StyledSpan mode={mode} className=\"sidenavHoverShow\">\r\n                    Dental\r\n                </StyledSpan>\r\n            </Box>\r\n            <Box\r\n                className=\"sidenavHoverShow\"\r\n                sx={{ display: mode === 'compact' ? 'none' : 'block' }}\r\n            >\r\n                {children || null}\r\n            </Box>\r\n        </BrandRoot>\r\n    )\r\n}\r\n\r\nexport default Brand\r\n","export const navigationsUser = [\r\n    // {\r\n    //     name: 'Dashboard',\r\n    //     path: '/user/dashboard/default',\r\n    //     icon: 'dashboard',\r\n    // },\r\n    // {\r\n    //     label: 'PAGES',\r\n    //     type: 'label',\r\n    // },\r\n    {\r\n        name: 'New Arriving',\r\n        icon: 'business',\r\n        path: '/pendingStockInUser',\r\n    },\r\n    {\r\n        name: 'In stock item',\r\n        icon: 'business',\r\n        path: '/inStockUser',\r\n    },\r\n    {\r\n        name: 'Stock-Out',\r\n        icon: 'business',\r\n        children: [\r\n            {\r\n                name: 'New entry',\r\n                iconText: 'SI',\r\n                path: '/newEntryForm',\r\n            },\r\n            {\r\n                name: 'Entry manage',\r\n                iconText: 'SI',\r\n                path: '/listStockOut',\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        name: 'Total Received',\r\n        icon: 'business',\r\n\r\n        path: '/allReceivedSrtock',\r\n    },\r\n]\r\n","import React, { Fragment } from 'react'\r\nimport Scrollbar from 'react-perfect-scrollbar'\r\nimport { navigations } from 'app/navigations'\r\nimport { navigationsUser } from 'app/navigationsUser'\r\nimport { MatxVerticalNav } from 'app/components'\r\nimport useSettings from 'app/hooks/useSettings'\r\nimport { styled } from '@mui/system'\r\nimport useAuth from 'app/hooks/useAuth'\r\nconst StyledScrollBar = styled(Scrollbar)(() => ({\r\n    paddingLeft: '1rem',\r\n    paddingRight: '1rem',\r\n    position: 'relative',\r\n}))\r\n\r\nconst SideNavMobile = styled('div')(({ theme }) => ({\r\n    position: 'fixed',\r\n    top: 0,\r\n    left: 0,\r\n    bottom: 0,\r\n    right: 0,\r\n    width: '100vw',\r\n    background: 'rgba(0, 0, 0, 0.54)',\r\n    zIndex: -1,\r\n    [theme.breakpoints.up('lg')]: {\r\n        display: 'none',\r\n    },\r\n}))\r\n\r\nconst Sidenav = ({ children }) => {\r\n    const { settings, updateSettings } = useSettings()\r\n    const { user } = useAuth()\r\n\r\n    const updateSidebarMode = (sidebarSettings) => {\r\n        let activeLayoutSettingsName = settings.activeLayout + 'Settings'\r\n        let activeLayoutSettings = settings[activeLayoutSettingsName]\r\n\r\n        updateSettings({\r\n            ...settings,\r\n            [activeLayoutSettingsName]: {\r\n                ...activeLayoutSettings,\r\n                leftSidebar: {\r\n                    ...activeLayoutSettings.leftSidebar,\r\n                    ...sidebarSettings,\r\n                },\r\n            },\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <StyledScrollBar options={{ suppressScrollX: true }}>\r\n                {children}\r\n\r\n                {user ? (\r\n                    <MatxVerticalNav items={navigations} />\r\n                ) : (\r\n                    <MatxVerticalNav items={navigationsUser} />\r\n                )}\r\n            </StyledScrollBar>\r\n\r\n            <SideNavMobile\r\n                onClick={() => updateSidebarMode({ mode: 'close' })}\r\n            />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Sidenav\r\n","import React from 'react'\r\nimport Brand from '../../Brand/Brand'\r\nimport { convertHexToRGB } from 'app/utils/utils'\r\nimport { Box, styled, useTheme } from '@mui/system'\r\nimport Sidenav from '../../Sidenav/Sidenav'\r\nimport useSettings from 'app/hooks/useSettings'\r\nimport { Switch, Hidden } from '@mui/material'\r\nimport { themeShadows } from 'app/components/MatxTheme/themeColors'\r\nimport { sidenavCompactWidth, sideNavWidth } from 'app/utils/constant'\r\n\r\nconst SidebarNavRoot = styled(Box)(({ theme, width, primaryBg, bgImgURL }) => ({\r\n    position: 'fixed',\r\n    top: 0,\r\n    left: 0,\r\n    height: '100vh',\r\n    width: width,\r\n    boxShadow: themeShadows[8],\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: 'top',\r\n    backgroundSize: 'cover',\r\n    zIndex: 111,\r\n    overflow: 'hidden',\r\n    color: theme.palette.text.primary,\r\n    transition: 'all 250ms ease-in-out',\r\n    backgroundImage: `linear-gradient(to bottom, rgba(${primaryBg}, 0.96), rgba(${primaryBg}, 0.96)), url(${bgImgURL})`,\r\n    '&:hover': {\r\n        width: sideNavWidth,\r\n        '& .sidenavHoverShow': {\r\n            display: 'block',\r\n        },\r\n        '& .compactNavItem': {\r\n            width: '100%',\r\n            maxWidth: '100%',\r\n            '& .nav-bullet': {\r\n                display: 'block',\r\n            },\r\n            '& .nav-bullet-text': {\r\n                display: 'none',\r\n            },\r\n        },\r\n    },\r\n}))\r\n\r\nconst NavListBox = styled(Box)(() => ({\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n}))\r\n\r\nconst Layout1Sidenav = () => {\r\n    const theme = useTheme()\r\n    const { settings, updateSettings } = useSettings()\r\n    const leftSidebar = settings.layout1Settings.leftSidebar\r\n    const { mode, bgImgURL } = leftSidebar\r\n\r\n    const getSidenavWidth = () => {\r\n        switch (mode) {\r\n            case 'compact':\r\n                return sidenavCompactWidth\r\n            default:\r\n                return sideNavWidth\r\n        }\r\n    }\r\n    const primaryRGB = convertHexToRGB(theme.palette.primary.main)\r\n\r\n    const updateSidebarMode = (sidebarSettings) => {\r\n        updateSettings({\r\n            layout1Settings: {\r\n                leftSidebar: {\r\n                    ...sidebarSettings,\r\n                },\r\n            },\r\n        })\r\n    }\r\n\r\n    const handleSidenavToggle = () => {\r\n        updateSidebarMode({ mode: mode === 'compact' ? 'full' : 'compact' })\r\n    }\r\n\r\n    return (\r\n        <SidebarNavRoot\r\n            bgImgURL={bgImgURL}\r\n            primaryBg={primaryRGB}\r\n            width={getSidenavWidth()}\r\n        >\r\n            <NavListBox>\r\n                <Brand>\r\n                    <Hidden smDown>\r\n                        <Switch\r\n                            onChange={handleSidenavToggle}\r\n                            checked={leftSidebar.mode !== 'full'}\r\n                            color=\"secondary\"\r\n                            size=\"small\"\r\n                        />\r\n                    </Hidden>\r\n                </Brand>\r\n                <Sidenav />\r\n            </NavListBox>\r\n        </SidebarNavRoot>\r\n    )\r\n}\r\n\r\nexport default React.memo(Layout1Sidenav)\r\n","import React from 'react'\r\nimport useSettings from 'app/hooks/useSettings'\r\nimport { ThemeProvider, useTheme } from '@mui/material'\r\n\r\nconst SidenavTheme = ({ children }) => {\r\n    const theme = useTheme()\r\n    const { settings } = useSettings()\r\n    const sidenavTheme =\r\n        settings.themes[settings.layout1Settings.leftSidebar.theme] || theme\r\n\r\n    return <ThemeProvider theme={sidenavTheme}>{children}</ThemeProvider>\r\n}\r\n\r\nexport default SidenavTheme\r\n","import clsx from 'clsx'\r\nimport React from 'react'\r\nimport { styled, useTheme } from '@mui/system'\r\nimport useSettings from 'app/hooks/useSettings'\r\nimport { Fab, IconButton, Icon } from '@mui/material'\r\n\r\nconst Toggle = styled('div')(() => ({\r\n    position: 'fixed',\r\n    right: '30px',\r\n    bottom: '50px',\r\n    zIndex: 99,\r\n    transition: 'all 0.15s ease',\r\n    '&.open': {\r\n        right: '10px',\r\n    },\r\n}))\r\n\r\nconst SecondarySidebarToggle = () => {\r\n    const { settings, updateSettings } = useSettings()\r\n\r\n    const toggle = () => {\r\n        updateSettings({\r\n            secondarySidebar: { open: !settings.secondarySidebar.open },\r\n        })\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //   updateSettings({\r\n    //     secondarySidebar: { open: !isMobile },\r\n    //   });\r\n    // }, [isMobile]);\r\n\r\n    const { palette } = useTheme()\r\n    const textColor = palette.primary.contrastText\r\n\r\n    return (\r\n        <Toggle className={clsx({ open: settings.secondarySidebar.open })}>\r\n            {settings.secondarySidebar.open && (\r\n                <IconButton onClick={toggle} size=\"small\" aria-label=\"toggle\">\r\n                    <Icon sx={{ color: textColor }}>close</Icon>\r\n                </IconButton>\r\n            )}\r\n            {!settings.secondarySidebar.open && (\r\n                <Fab color=\"primary\" aria-label=\"expand\" onClick={toggle}>\r\n                    <Icon sx={{ color: textColor }}>settings</Icon>\r\n                </Fab>\r\n            )}\r\n        </Toggle>\r\n    )\r\n}\r\n\r\nexport default SecondarySidebarToggle\r\n","import { Badge } from '@mui/material'\r\nimport { styled } from '@mui/system'\r\n\r\nconst BadgeSelected = styled(Badge)(() => ({\r\n    top: '0',\r\n    right: '0',\r\n    height: '32px',\r\n    width: '32px',\r\n    borderRadius: '50%',\r\n}))\r\n\r\nexport default BadgeSelected\r\n","import { H5, Span } from '../Typography'\r\nimport BadgeSelected from './BadgeSelected'\r\nimport Scrollbar from 'react-perfect-scrollbar'\r\nimport useSettings from 'app/hooks/useSettings'\r\nimport React, { Fragment, useState } from 'react'\r\nimport { styled, Box, useTheme } from '@mui/system'\r\nimport { themeShadows } from '../MatxTheme/themeColors'\r\nimport {\r\n    Icon,\r\n    Card,\r\n    Button,\r\n    Drawer,\r\n    Tooltip,\r\n    IconButton,\r\n    ThemeProvider,\r\n} from '@mui/material'\r\n\r\nconst Label = styled(Span)(({ theme }) => ({\r\n    color: theme.palette.secondary.main,\r\n    backgroundColor: theme.palette.primary.dark,\r\n    fontWeight: 700,\r\n    transform: 'rotate(90deg)',\r\n    marginBottom: '2.5rem',\r\n    padding: '.25rem .5rem',\r\n    borderRadius: '4px',\r\n    cursor: 'pointer',\r\n    letterSpacing: '1.5px',\r\n    fontSize: '1rem',\r\n    '&:hover, &.open': {\r\n        backgroundColor: theme.palette.secondary.main,\r\n        color: theme.palette.secondary.contrastText,\r\n    },\r\n}))\r\n\r\nconst MaxCustomaizer = styled('div')(({ theme }) => ({\r\n    height: '100vh',\r\n    width: 320,\r\n    position: 'fixed',\r\n    top: 0,\r\n    right: 0,\r\n    zIndex: 50,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    paddingBottom: '32px',\r\n    boxShadow: themeShadows[12],\r\n    background: theme.palette.background.default,\r\n    '& .helpText': {\r\n        margin: '0px .5rem 1rem',\r\n    },\r\n}))\r\n\r\nconst LayoutBox = styled(BadgeSelected)(() => ({\r\n    width: '100%',\r\n    height: '152px !important',\r\n    cursor: 'pointer',\r\n    marginTop: '12px',\r\n    marginBottom: '12px',\r\n    '& .layout-name': {\r\n        display: 'none',\r\n    },\r\n    '&:hover .layout-name': {\r\n        position: 'absolute',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: '100%',\r\n        width: '100%',\r\n        background: 'rgba(0,0,0,0.3)',\r\n        zIndex: 12,\r\n    },\r\n}))\r\n\r\nconst Controller = styled('div')(() => ({\r\n    minHeight: 58,\r\n    padding: '14px 20px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    marginBottom: '16px',\r\n    boxShadow: themeShadows[6],\r\n}))\r\n\r\nconst IMG = styled('img')(() => ({\r\n    width: '100%',\r\n}))\r\n\r\nconst StyledScrollBar = styled(Scrollbar)(() => ({\r\n    paddingLeft: '16px',\r\n    paddingRight: '16px',\r\n}))\r\n\r\nconst MatxCustomizer = (props) => {\r\n    const [open, setOpen] = useState(false)\r\n    const { settings, updateSettings } = useSettings()\r\n    const theme = useTheme()\r\n    const secondary = theme.palette.text.secondary\r\n\r\n    const tooglePanel = () => {\r\n        setOpen(!open)\r\n    }\r\n\r\n    let activeTheme = { ...settings.themes[settings.activeTheme] }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Tooltip title=\"Theme Settings\" placement=\"left\">\r\n                <Label className=\"open\" onClick={tooglePanel}>\r\n                    THEMES\r\n                </Label>\r\n            </Tooltip>\r\n\r\n            <ThemeProvider theme={activeTheme}>\r\n                <Drawer\r\n                    anchor={'right'}\r\n                    open={open}\r\n                    variant=\"temporary\"\r\n                    onClose={tooglePanel}\r\n                    ModalProps={{\r\n                        keepMounted: true,\r\n                    }}\r\n                >\r\n                    <MaxCustomaizer>\r\n                        <Controller>\r\n                            <Box display=\"flex\">\r\n                                <Icon className=\"icon\" color=\"primary\">\r\n                                    settings\r\n                                </Icon>\r\n                                <H5 sx={{ ml: 1, fontSize: '1rem' }}>\r\n                                    Theme Settings\r\n                                </H5>\r\n                            </Box>\r\n                            <IconButton onClick={tooglePanel}>\r\n                                <Icon className=\"icon\">close</Icon>\r\n                            </IconButton>\r\n                        </Controller>\r\n\r\n                        <StyledScrollBar options={{ suppressScrollX: true }}>\r\n                            <Box sx={{ mb: 4, mx: 3 }}>\r\n                                <Box sx={{ color: secondary }}>Layouts</Box>\r\n\r\n                                <Box display=\"flex\" flexDirection=\"column\">\r\n                                    {demoLayouts.map((layout) => (\r\n                                        <LayoutBox\r\n                                            color=\"secondary\"\r\n                                            badgeContent={'Pro'}\r\n                                            invisible={!layout.isPro}\r\n                                            key={layout.name}\r\n                                        >\r\n                                            <Card\r\n                                                sx={{\r\n                                                    position: 'relative',\r\n                                                }}\r\n                                                onClick={() =>\r\n                                                    updateSettings(\r\n                                                        layout.options\r\n                                                    )\r\n                                                }\r\n                                                elevation={4}\r\n                                            >\r\n                                                <Box\r\n                                                    sx={{\r\n                                                        overflow: 'hidden',\r\n                                                    }}\r\n                                                    className=\"layout-name\"\r\n                                                >\r\n                                                    <Button\r\n                                                        variant=\"contained\"\r\n                                                        color=\"secondary\"\r\n                                                    >\r\n                                                        {layout.name}\r\n                                                    </Button>\r\n                                                </Box>\r\n\r\n                                                <IMG\r\n                                                    src={layout.thumbnail}\r\n                                                    alt={layout.name}\r\n                                                />\r\n                                            </Card>\r\n                                        </LayoutBox>\r\n                                    ))}\r\n                                </Box>\r\n                            </Box>\r\n                        </StyledScrollBar>\r\n                    </MaxCustomaizer>\r\n                </Drawer>\r\n            </ThemeProvider>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nconst demoLayouts = [\r\n    {\r\n        name: 'Light Sidebar',\r\n        thumbnail: '/assets/images/screenshots/layout1-customizer.png',\r\n        isPro: false,\r\n        options: {\r\n            activeLayout: 'layout1',\r\n            activeTheme: 'blue',\r\n            layout1Settings: {\r\n                leftSidebar: {\r\n                    mode: 'full',\r\n                    theme: 'whiteBlue',\r\n                    bgOpacity: 0.98,\r\n                },\r\n                topbar: {\r\n                    theme: 'blueDark',\r\n                    fixed: true,\r\n                },\r\n            },\r\n            footer: {\r\n                theme: 'slateDark1',\r\n            },\r\n        },\r\n    },\r\n    {\r\n        name: 'Compact Sidebar',\r\n        thumbnail: '/assets/images/screenshots/layout5-customizer.png',\r\n        isPro: false,\r\n        options: {\r\n            activeLayout: 'layout1',\r\n            activeTheme: 'blue',\r\n            layout1Settings: {\r\n                leftSidebar: {\r\n                    mode: 'compact',\r\n                    theme: 'slateDark1',\r\n                    bgOpacity: 0.92,\r\n                },\r\n                topbar: {\r\n                    theme: 'whiteBlue',\r\n                    fixed: true,\r\n                },\r\n            },\r\n        },\r\n    },\r\n    {\r\n        name: 'Dark Sidebar',\r\n        thumbnail: '/assets/images/screenshots/layout1-blue-customizer.png',\r\n        isPro: false,\r\n        options: {\r\n            activeLayout: 'layout1',\r\n            activeTheme: 'blue',\r\n            layout1Settings: {\r\n                leftSidebar: {\r\n                    mode: 'full',\r\n                    theme: 'slateDark1',\r\n                    bgOpacity: 0.92,\r\n                },\r\n                topbar: {\r\n                    theme: 'blueDark',\r\n                    fixed: true,\r\n                },\r\n            },\r\n        },\r\n    },\r\n    {\r\n        name: 'Dark Theme',\r\n        thumbnail: '/assets/images/screenshots/layout3-customizer.png',\r\n        isPro: false,\r\n        options: {\r\n            activeLayout: 'layout1',\r\n            activeTheme: 'purpleDark1',\r\n            layout1Settings: {\r\n                leftSidebar: {\r\n                    mode: 'full',\r\n                    theme: 'slateDark1',\r\n                    bgOpacity: 0.92,\r\n                },\r\n                topbar: {\r\n                    theme: 'purpleDark1',\r\n                    fixed: true,\r\n                },\r\n            },\r\n            footer: {\r\n                theme: 'slateDark1',\r\n            },\r\n        },\r\n    },\r\n    // {\r\n    //     name: 'Horizontal Navigation',\r\n    //     thumbnail: '/assets/images/screenshots/layout4-customizer.png',\r\n    //     isPro: true,\r\n    //     options: {\r\n    //         activeLayout: 'layout2',\r\n    //         activeTheme: 'purple1',\r\n    //         layout2Settings: {\r\n    //             mode: 'full',\r\n    //         },\r\n    //         footer: {\r\n    //             theme: 'slateDark1',\r\n    //         },\r\n    //     },\r\n    // },\r\n]\r\n\r\nexport default MatxCustomizer\r\n","import { Span } from '../Typography'\r\nimport React from 'react'\r\n\r\nimport MatxCustomizer from '../MatxCustomizer/MatxCustomizer'\r\nimport { styled } from '@mui/system'\r\n\r\nconst SidebarRoot = styled('div')(({ theme, width }) => ({\r\n    position: 'fixed',\r\n    height: '100vh',\r\n    width: width,\r\n    right: 0,\r\n    bottom: 0,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    boxShadow: theme.shadows[8],\r\n    backgroundColor: theme.palette.primary.main,\r\n    zIndex: 98,\r\n    transition: 'all 0.15s ease',\r\n    color: theme.palette.text.primary,\r\n    '@global': {\r\n        '@media screen and (min-width: 767px)': {\r\n            '.content-wrap, .layout2.layout-contained, .layout2.layout-full': {\r\n                marginRight: (props) => props.width,\r\n            },\r\n            '.matx-customizer': {\r\n                right: (props) => props.width,\r\n            },\r\n        },\r\n        '@media screen and (max-width: 959px)': {\r\n            '.toolbar-menu-wrap .menu-area': {\r\n                width: (props) => `calc(100% - ${props.width})`,\r\n            },\r\n        },\r\n    },\r\n}))\r\n\r\nconst SecondarySidebarContent = () => {\r\n    return (\r\n        <SidebarRoot width={'50px'} className=\"secondary-sidebar\">\r\n            <Span sx={{ m: 'auto' }}></Span>\r\n            <MatxCustomizer />\r\n\r\n            <Span sx={{ m: 'auto' }}></Span>\r\n        </SidebarRoot>\r\n    )\r\n}\r\n\r\nexport default SecondarySidebarContent\r\n","import React from 'react'\r\nimport { ThemeProvider } from '@mui/material'\r\n\r\nconst SecondarySidenavTheme = ({ theme, classes, children, open }) => {\r\n    return <ThemeProvider theme={theme}>{children}</ThemeProvider>\r\n}\r\nexport default SecondarySidenavTheme\r\n","import React from 'react'\r\nimport useSettings from 'app/hooks/useSettings'\r\nimport SecondarySidebarToggle from './SecondarySidebarToggle'\r\nimport SecondarySidebarContent from './SecondarySidebarContent'\r\nimport SecondarySidenavTheme from '../MatxTheme/SecondarySidenavTheme/SecondarySidenavTheme'\r\nimport { useTheme } from '@mui/system'\r\n\r\nconst SecondarySidebar = () => {\r\n    const theme = useTheme()\r\n    const { settings } = useSettings()\r\n    const secondarySidebarTheme =\r\n        settings.themes[settings.secondarySidebar.theme]\r\n\r\n    return (\r\n        <SecondarySidenavTheme theme={secondarySidebarTheme}>\r\n            {settings.secondarySidebar.open && (\r\n                <SecondarySidebarContent chatTheme={theme} />\r\n            )}\r\n            <SecondarySidebarToggle />\r\n        </SecondarySidenavTheme>\r\n    )\r\n}\r\n\r\nexport default SecondarySidebar\r\n","import { Outlet } from 'react-router-dom'\r\nimport Layout1Topbar from './Layout1Topbar'\r\nimport Layout1Sidenav from './Layout1Sidenav'\r\nimport Scrollbar from 'react-perfect-scrollbar'\r\nimport useSettings from 'app/hooks/useSettings'\r\nimport React, { useEffect, useRef } from 'react'\r\nimport { styled, Box, useTheme } from '@mui/system'\r\nimport { ThemeProvider, useMediaQuery } from '@mui/material'\r\nimport SidenavTheme from '../../MatxTheme/SidenavTheme/SidenavTheme'\r\nimport { sidenavCompactWidth, sideNavWidth } from 'app/utils/constant'\r\nimport SecondarySidebar from '../../SecondarySidebar/SecondarySidebar'\r\nimport MatxSuspense from 'app/components/MatxSuspense/MatxSuspense'\r\n\r\nconst Layout1Root = styled(Box)(({ theme }) => ({\r\n    display: 'flex',\r\n    background: theme.palette.background.default,\r\n}))\r\n\r\nconst ContentBox = styled(Box)(() => ({\r\n    height: '100%',\r\n    display: 'flex',\r\n    overflowY: 'auto',\r\n    overflowX: 'hidden',\r\n    flexDirection: 'column',\r\n    justifyContent: 'space-between',\r\n}))\r\n\r\nconst StyledScrollBar = styled(Scrollbar)(() => ({\r\n    height: '100%',\r\n    position: 'relative',\r\n    display: 'flex',\r\n    flexGrow: '1',\r\n    flexDirection: 'column',\r\n}))\r\n\r\nconst LayoutContainer = styled(Box)(({ width, secondarySidebar }) => ({\r\n    height: '100vh',\r\n    display: 'flex',\r\n    flexGrow: '1',\r\n    flexDirection: 'column',\r\n    verticalAlign: 'top',\r\n    marginLeft: width,\r\n    position: 'relative',\r\n    overflow: 'hidden',\r\n    transition: 'all 0.3s ease',\r\n    marginRight: secondarySidebar.open ? 50 : 0,\r\n}))\r\n\r\nconst Layout1 = () => {\r\n    const { settings, updateSettings } = useSettings()\r\n    const { layout1Settings, secondarySidebar } = settings\r\n    const topbarTheme = settings.themes[layout1Settings.topbar.theme]\r\n    const {\r\n        leftSidebar: { mode: sidenavMode, show: showSidenav },\r\n    } = layout1Settings\r\n\r\n    const getSidenavWidth = () => {\r\n        switch (sidenavMode) {\r\n            case 'full':\r\n                return sideNavWidth\r\n            case 'compact':\r\n                return sidenavCompactWidth\r\n            default:\r\n                return '0px'\r\n        }\r\n    }\r\n\r\n    const theme = useTheme()\r\n    const sidenavWidth = getSidenavWidth()\r\n    const isMdScreen = useMediaQuery(theme.breakpoints.down('md'))\r\n\r\n    const ref = useRef({ isMdScreen, settings })\r\n    const layoutClasses = `theme-${theme.palette.type}`\r\n\r\n    useEffect(() => {\r\n        let { settings } = ref.current\r\n        let sidebarMode = settings.layout1Settings.leftSidebar.mode\r\n        if (settings.layout1Settings.leftSidebar.show) {\r\n            let mode = isMdScreen ? 'close' : sidebarMode\r\n            updateSettings({ layout1Settings: { leftSidebar: { mode } } })\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [isMdScreen])\r\n\r\n    return (\r\n        <Layout1Root className={layoutClasses}>\r\n            {showSidenav && sidenavMode !== 'close' && (\r\n                <SidenavTheme>\r\n                    <Layout1Sidenav />\r\n                </SidenavTheme>\r\n            )}\r\n\r\n            <LayoutContainer\r\n                width={sidenavWidth}\r\n                secondarySidebar={secondarySidebar}\r\n            >\r\n                {layout1Settings.topbar.show && layout1Settings.topbar.fixed && (\r\n                    // <Layout1Topbar fixed={true} />\r\n                    <ThemeProvider theme={topbarTheme}>\r\n                        <Layout1Topbar fixed={true} className=\"elevation-z8\" />\r\n                    </ThemeProvider>\r\n                )}\r\n                {settings.perfectScrollbar && (\r\n                    <StyledScrollBar>\r\n                        {layout1Settings.topbar.show &&\r\n                            !layout1Settings.topbar.fixed && (\r\n                                // <Layout1Topbar />\r\n                                <ThemeProvider theme={topbarTheme}>\r\n                                    <Layout1Topbar />\r\n                                </ThemeProvider>\r\n                            )}\r\n                        <Box flexGrow={1} position=\"relative\">\r\n                            <MatxSuspense>\r\n                                <Outlet />\r\n                            </MatxSuspense>\r\n                        </Box>\r\n                        {/* {settings.footer.show && !settings.footer.fixed && (\r\n                            <Footer />\r\n                        )} */}\r\n                    </StyledScrollBar>\r\n                )}\r\n\r\n                {!settings.perfectScrollbar && (\r\n                    <ContentBox>\r\n                        {layout1Settings.topbar.show &&\r\n                            !layout1Settings.topbar.fixed && (\r\n                                <ThemeProvider theme={topbarTheme}>\r\n                                    <Layout1Topbar />\r\n                                </ThemeProvider>\r\n                            )}\r\n                        <Box flexGrow={1} position=\"relative\">\r\n                            <MatxSuspense>\r\n                                <Outlet />\r\n                            </MatxSuspense>\r\n                        </Box>\r\n                        {/* {settings.footer.show && !settings.footer.fixed && (\r\n                            <Footer />\r\n                        )} */}\r\n                    </ContentBox>\r\n                )}\r\n\r\n                {/* {settings.footer.show && settings.footer.fixed && <Footer />} */}\r\n            </LayoutContainer>\r\n            {settings.secondarySidebar.show && <SecondarySidebar />}\r\n        </Layout1Root>\r\n    )\r\n}\r\n\r\nexport default React.memo(Layout1)\r\n"],"sourceRoot":""}